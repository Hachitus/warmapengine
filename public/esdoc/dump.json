[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/eventlisteners.js",
    "memberof": null,
    "longname": "core/eventlisteners.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/* global Hammer, Hamster */\r\n\r\n'use strict';\r\n\r\n/***********************\r\n****** VARIABLES *******\r\n***********************/\r\nvar stateOfEvents = {};\r\nvar singletonScope;\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport { eventListenerModule as eventListeners };\r\n\r\n/***********************\r\n******** PUBLIC ********\r\n***********************/\r\n/**\r\n * Houses the default eventlisteners used in the map. When plugins are added to the map this class can be used for the eventlistener management. This way all the eventlisteners are in the same object, conveniently.\r\n * eventListeners is a singleton that needs to be initialized with an object, that holds all the callbacks used in this class. I.e.\r\n *  {\r\n *  select: function() {},\r\n *   zoom: function() {}\r\n * }\r\n *\r\n * @requires Hammer.js (for touch events)\r\n * @requires Hamster.js (for good cross-browser mousewheel events)\r\n * @param {HTML element} canvasElement          The canvas element we listen events from. Will try to search the first canvas in the DOM, if none is provided\r\n */\r\nfunction eventListenerModule(canvasElement = document.getElementsByTagName(\"canvas\")[0], refresh = false) {\r\n  var CBs = {};\r\n  var hammer, hamster;\r\n\r\n  if (refresh) {\r\n    singletonScope = undefined;\r\n  }\r\n\r\n  if (singletonScope) {\r\n    return singletonScope;\r\n  }\r\n\r\n  if (!canvasElement) {\r\n    throw new Error(\"eventlisteners initialization require map callbacks and canvas element as arguments\");\r\n  }\r\n\r\n  hammer = new Hammer.Manager(canvasElement);\r\n  hamster = new Hamster(canvasElement);\r\n  /********** Required **********/\r\n\r\n  singletonScope = {\r\n    states: {}\r\n  };\r\n\r\n  /**\r\n   * Sets the state of the event. State is so far very important for fluent dragging and selecting. When we start to drag, we avoid selecting units and vice versa, when we keep an event state tracking through this.\r\n   *\r\n   * @param {String} type         Event name we are following\r\n   * @param {Boolean} state       The state we want to set (true or false)\r\n   */\r\n  singletonScope.setState = function setState(type, state) {\r\n    stateOfEvents[type] = state;\r\n  };\r\n  /**\r\n   * Gets the current state of the event\r\n   *\r\n   * @param  {String} type         Event name we are following\r\n   * @return {Boolean}             returns true of false\r\n   */\r\n  singletonScope.getState = function setState(type) {\r\n    return stateOfEvents[type];\r\n  };\r\n\r\n  /**\r\n   * Sets the canvas to fullsize as in the same size of the window / content area. But not fullscreen\r\n   *\r\n   * @param {Function} cb     Callback that fires when this event activates\r\n   * @return {Boolean}        Return the state of this event\r\n   */\r\n  singletonScope.toggleFullSizeListener = function toggleFullSizeListener(cb) {\r\n    if ( !singletonScope.states.fullSize ) {\r\n      CBs.fullSize = cb;\r\n      cb();\r\n      window.addEventListener(\"resize\", CBs.fullSize);\r\n    } else {\r\n      window.removeEventListener(\"resize\", CBs.fullSize);\r\n    }\r\n\r\n    singletonScope.states.fullSize = !singletonScope.states.fullSize;\r\n\r\n    return singletonScope.states.fullSize;\r\n  };\r\n  /**\r\n   * Sets the canvas to fullsize (as in fullSizeListener) and sets the browser in fullscreen mode\r\n   *\r\n   * @param {Function} cb     Callback that fires when this event activates\r\n   * @return {Boolean}        Return the state of this event\r\n   */\r\n  singletonScope.toggleFullscreen = function toggleFullscreen(cb) {\r\n    singletonScope.states.fullScreen = cb();\r\n\r\n    return cb;\r\n  };\r\n  /**\r\n   * Zoom the map. Mousewheel (desktop) and pinch (mobile)\r\n   *\r\n   * @param {Function} cb     Callback that fires when this event activates\r\n   * @return {Boolean}        Return the state of this event\r\n   */\r\n  singletonScope.toggleZoomListener = function toggleZoomListener(cb) {\r\n    CBs.zoom = cb;\r\n\r\n    if (singletonScope.states.zoom !== true) {\r\n      var pinch = new Hammer.Pinch();\r\n      hammer.add(pinch);\r\n      hammer.on(\"pinch\", CBs.zoom);\r\n      /* Hamster handles wheel events really nicely */\r\n      hamster.wheel(CBs.zoom);\r\n    } else {\r\n      hammer.on(\"pinch\", CBs.zoom);\r\n      hamster.unwheel(CBs.zoom);\r\n    }\r\n\r\n    singletonScope.states.zoom = !singletonScope.states.zoom;\r\n\r\n    return singletonScope.states.zoom;\r\n  };\r\n  /**\r\n   * DragListener (normally used for moving the map)\r\n   *\r\n   * @param {Function} cb     Callback that fires when this event activates\r\n   * @return {Boolean}        Return the state of this event\r\n   */\r\n  singletonScope.toggleDragListener = function toggleDragListener(cb) {\r\n    var pan;\r\n\r\n    CBs.drag = cb;\r\n\r\n    if (singletonScope.states.drag !== true) {\r\n      pan = new Hammer.Pan({\r\n        pointers: 1,\r\n        threshold: 5,\r\n        direction:  Hammer.DIRECTION_ALL });\r\n      hammer.add(pan);\r\n      hammer.on(\"pan\", CBs.drag);\r\n    } else {\r\n      hammer.off(\"pan\", CBs.drag);\r\n    }\r\n\r\n    singletonScope.states.drag = !singletonScope.states.drag;\r\n\r\n    return singletonScope.states.drag;\r\n  };\r\n  /**\r\n   * Selecting something from the map\r\n   *\r\n   * @param {Function} cb     Callback that fires when this event activates\r\n   * @return {Boolean}        Return the state of this event\r\n   */\r\n  singletonScope.toggleSelectListener = function toggleSelectListener(cb) {\r\n    CBs.select = cb;\r\n\r\n    if (singletonScope.states.select !== true) {\r\n      var tap = new Hammer.Tap();\r\n      hammer.add(tap);\r\n      hammer.on(\"tap\", CBs.select);\r\n    } else {\r\n      hammer.off(\"tap\", CBs.select);\r\n    }\r\n\r\n    singletonScope.states.select = !singletonScope.states.select;\r\n\r\n    return singletonScope.states.select;\r\n  };\r\n\r\n  return singletonScope;\r\n}"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "stateOfEvents",
    "memberof": "core/eventlisteners.js",
    "longname": "core/eventlisteners.js~stateOfEvents",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/eventlisteners.js",
    "importStyle": null,
    "description": "********************\n***** VARIABLES *******\n*********************",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "eventListenerModule",
    "memberof": "core/eventlisteners.js",
    "longname": "core/eventlisteners.js~eventListenerModule",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/eventlisteners.js",
    "importStyle": null,
    "description": "Houses the default eventlisteners used in the map. When plugins are added to the map this class can be used for the eventlistener management. This way all the eventlisteners are in the same object, conveniently.\neventListeners is a singleton that needs to be initialized with an object, that holds all the callbacks used in this class. I.e.\n {\n select: function() {},\n  zoom: function() {}\n}",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@requires",
        "tagValue": "Hammer.js (for touch events)"
      },
      {
        "tagName": "@requires",
        "tagValue": "Hamster.js (for good cross-browser mousewheel events)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTML element"
        ],
        "spread": false,
        "optional": false,
        "name": "canvasElement",
        "description": "The canvas element we listen events from. Will try to search the first canvas in the DOM, if none is provided"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/Map.js",
    "memberof": null,
    "longname": "core/Map.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/* global System, Q */\r\n\r\n'use strict';\r\n\r\n/***********************\r\n******** IMPORT ********\r\n***********************/\r\nimport { Map_layer, Map_parentLayer, eventListeners, ObjectManager, mapEvents, utils } from '/components/bundles/coreBundle';\r\nimport * as Q from '/assets/lib/q/q';\r\n\r\n/***********************\r\n****** VARIABLES *******\r\n***********************/\r\nvar _drawMapOnNextTick = false;\r\nvar isMapReadyPromises = [];\r\nvar eventlisteners, _staticLayer, _movableLayer, _renderer, boundResizer, ParentLayerConstructor;\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\n/**\r\n * Main class for the whole engine, which initializes the whole structure and plugins\r\n *\r\n * You use the class by instantiating it with new and then initialize with init-method:\r\n * var map = new Map(canvasElement, mapOptions );\r\n * promises = map.init( gameData.pluginsToActivate, mapData.startPoint );\r\n *\r\n * Plugins can be added with activatePlugins-method by prodiving init(map) method in the plugin. Plugins are always\r\n * functions, not objects that are instantiated. Plugins are supposed to extend the map object or anything in it via\r\n * it's public methods.\r\n *\r\n * @requires PIXI.JS framework in global namespace\r\n * @requires canvas (webGL support recommended) HTML5-element supported.\r\n * @requires Hammer for touch events\r\n * @requires Hamster for mouse scroll events\r\n *\r\n * @requires Plugins that use eventlistener by default, use pointer events polyfill, such as: https://github.com/jquery/PEP\r\n * Plugins and eventlistener can be overriden, but they user pointer events by default (either the browser must support\r\n * them or use polyfill)\r\n **/\r\nexport class Map {\r\n  /**\r\n   * @class Map\r\n   * @constructor\r\n   * @param {HTML element} canvasContainer                          HTML element which will be container for the created canvas element\r\n   * @param {Object} props                                           Extra properties\r\n   * @param {{x: Integer, y: Integer}} props.startCoord              Coordinates where the map starts at\r\n   * @param {{width: Integer, height: Integer}} props.bounds         Bounds of the map / mapSize\r\n   * @param {Object} props.rendererOptions                           Renderer options passed to PIXI.autoDetectRenderer\r\n   * @param {{width: Integer, height: Integer}} props.subContainers  Subcontainers size in pixels. If given, will activate subcontainers. If not given or false, subcontainers are not used.area.\r\n   * @param {function(FPS: Number, FPStime: Number, renderTime: Number, drawCount: Number): void} trackFPSCB                                   Callback function for tracking FPS in renderer. So this is used for debugging and optimizing.\r\n   *\r\n   *\r\n   * @return {Map}                                            new Map instance\r\n   */\r\n  constructor(canvasContainer = null,\r\n      props = {\r\n        startCoord: { x: 0, y: 0 },\r\n        bounds: { width: 0, height: 0 },\r\n        rendererOptions: { refreshEventListeners: true },\r\n        subContainers: false,\r\n        trackFPSCB: false }) {\r\n    var { startCoord, bounds, rendererOptions, subContainers, trackFPSCB } = props;\r\n\r\n    if (!canvasContainer) {\r\n      throw new Error(this.constructor.name + \" needs canvasContainer!\");\r\n    }\r\n\r\n    if (typeof canvasContainer === \"string\") {\r\n      canvasContainer = document.querySelector(canvasContainer);\r\n    }\r\n\r\n    _renderer = PIXI.autoDetectRenderer(bounds.width, bounds.height, rendererOptions);\r\n    /* We handle all the events ourselves through addEventListeners-method on canvas, so destroy pixi native method */\r\n    _renderer.plugins.interaction.destroy();\r\n    canvasContainer.innerHTML = \"\";\r\n    canvasContainer.appendChild(_renderer.view, canvasContainer);\r\n    let interactionManager = new PIXI.interaction.InteractionManager(_renderer);\r\n\r\n    /* This defines which class we use to generate layer on the map. Under movableLayer */\r\n    ParentLayerConstructor = subContainers ? Map_parentLayer : Map_layer;\r\n\r\n    /* These are the 2 topmost layers on the map:\r\n     * - staticLayer: Keeps at the same coordinates always and is responsible for holding map scale value and possible\r\n     * objects that do not move with the map.\r\n     * - movableLayer: Moves the map, when the user commands. Can hold e.g. UI objects that move with the map. Like\r\n     * graphics that show which area or object is currently selected. */\r\n    _staticLayer = new Map_layer({ name:\"staticLayer\", coord: { x: 0, y: 0 } });\r\n    _movableLayer = new Map_layer({ name:\"movableLayer\", coord: startCoord });\r\n    _staticLayer.addChild(_movableLayer);\r\n\r\n    /* InteractionManager is responsible for finding what objects are under certain coordinates. E.g. when selecting */\r\n    eventlisteners = eventListeners(this.canvas, true);\r\n\r\n    /* needed for fullsize canvas in PIXI */\r\n    _renderer.view.style.position = \"absolute\";\r\n    _renderer.view.style.display = \"block\";\r\n    /* stop scrollbars of showing */\r\n    document.getElementsByTagName(\"body\")[0].style.overflow = \"hidden\";\r\n    _renderer.view.style.left = \"0px\";\r\n    _renderer.view.style.top = \"0px\";\r\n\r\n    /**\r\n     * canvas element that was generated and is being used by this new generated Map instance.\r\n     *\r\n     * @type {Canvas element}\r\n     */\r\n    this.canvas = _renderer.view;\r\n    /**\r\n     * list of plugins that the map uses and are initialized\r\n     * @see class/core/Map.js~Map.html#instance-method-activatePlugins\r\n     *\r\n     * @type {Set}\r\n     */\r\n    this.plugins = new Set();\r\n    /**\r\n     * Subcontainers size that we want to generate, when layers use subcontainers\r\n     *\r\n     * @type {{width: Integer, height: Int}}\r\n     */\r\n    this.subContainersConfig = subContainers;\r\n    /**\r\n     * Callback function that gets the current FPS on the map and shows it in DOM\r\n     *\r\n     * @type {Function}\r\n     */\r\n    this.trackFPSCB = trackFPSCB;\r\n    /**\r\n     * ObjectManager instance. Responsible for retrieving the objects from the map, on desired occasions. Like when the player clicks the map to select some object.\r\n     *\r\n     * @type {ObjectManager}\r\n     */\r\n    this.objectManager = new ObjectManager(interactionManager); // Fill this with quadtrees or such\r\n\r\n    /* PRIVATE */\r\n    this._mapInMove = false;\r\n  }\r\n  /**\r\n   * initialization method\r\n   *\r\n   * @method init\r\n   * @param {Array of Strings} plugins    Plugins to be activated for the map. Normally you should give the plugins here\r\n   * instead of separately passing them to activatePlugins method. You can provide the module strings or module objects.\r\n   * @param {x: ? y:?} coord              Starting coordinates for the map\r\n   * @param {Function} tickCB             callback function for tick. Tick callback is initiated in every frame. So map draws happen during ticks\r\n   * @param {Object} options              Fullsize: Do we set fullsize canvas or not.\r\n   * @return {Array}                      Returns an array of Promises. If this is empty / zero. Then there is nothing to wait for, if it contains promises, you have to wait for them to finish for the plugins to work and map be ready.\r\n   * */\r\n  init(plugins = [], coord = { x: 0, y: 0 }, tickCB = null, options = { fullsize: true }) {\r\n    var allPromises = [];\r\n\r\n    options.fullsize && this.toggleFullsize();\r\n\r\n    if (plugins.length && typeof plugins[0] === \"object\") {\r\n      this.activatePlugins(plugins);\r\n    } else if (plugins.length && typeof plugins[0] === \"string\") {\r\n      plugins.map(plugin => {\r\n        let thisPromise;\r\n\r\n        thisPromise = System.import(plugin).then( (plugin) => {\r\n          this.activatePlugin(plugin);\r\n        });\r\n\r\n        allPromises.push(thisPromise);\r\n      });\r\n    }\r\n\r\n    coord && Object.assign(_movableLayer, coord);\r\n\r\n    this.drawOnNextTick();\r\n    _defaultTick(this, PIXI.ticker.shared);\r\n    tickCB && this.customTickOn(tickCB);\r\n\r\n    isMapReadyPromises = allPromises;\r\n\r\n    return allPromises;\r\n  }\r\n  /**\r\n   * The correct way to update / redraw the map. Check happens at every tick and thus in every frame.\r\n   * @return the current map instance\r\n   * */\r\n  whenReady() {\r\n    return Q.all(isMapReadyPromises);\r\n  }\r\n  /**\r\n   * The correct way to update / redraw the map. Check happens at every tick and thus in every frame.\r\n   * @return the current map instance\r\n   * */\r\n  drawOnNextTick() {\r\n    _drawMapOnNextTick = true;\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * The correct way to update / redraw the map. Check happens at every tick and thus in every frame.\r\n   * @return the current map instance\r\n   * */\r\n  getLayersWithAttributes(attribute, value) {\r\n    return _staticLayer.children[0].children.filter(layer => {\r\n      return layer[attribute] === value;\r\n    });\r\n  }\r\n  createUILayer(name = \"default UI layer\", coord = { x: 0, y: 0 }) {\r\n    var layer = new Map_layer(name, coord);\r\n\r\n    return layer;\r\n  }\r\n  /**\r\n   * All parameters are passed to Map_layer constructor\r\n   * @return created Map_layer instance\r\n   * */\r\n  addLayer(layerOptions) {\r\n    var thisLayer;\r\n\r\n    if (this.getSubContainerConfigs() && layerOptions.subContainers !== false) {\r\n      layerOptions.subContainers = this.getSubContainerConfigs();\r\n    }\r\n\r\n    thisLayer = new ParentLayerConstructor(layerOptions);\r\n    _movableLayer.addChild(thisLayer);\r\n\r\n    return thisLayer;\r\n  }\r\n  /**\r\n   * Does the map use subContainers\r\n   */\r\n  usesSubContainers() {\r\n    return this.subContainersConfig ? true : false;\r\n  }\r\n  getSubContainerConfigs() {\r\n    return this.subContainersConfig;\r\n  }\r\n  /**\r\n   * Get the size of area that is shown to the player. Depends a bit if we want to show the maximum possible or current.\r\n   *\r\n   * @param  {Boolean} isLocal       Do we want to use moving layer or static (global) coordinates\r\n   * @return {Object}                x- and y-coordinates and the width and height of the viewport\r\n   */\r\n  getViewportArea(isLocal = false) {\r\n    var layer = isLocal ? this.getMovableLayer() : this.getStaticLayer();\r\n\r\n    return {\r\n      x: layer.x,\r\n      y: layer.y,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    };\r\n  }\r\n  /**\r\n   * @param {Map_layer} layer - the layer object to be removed\r\n   * */\r\n  removeLayer(layer) {\r\n    _movableLayer.removeChild(layer);\r\n\r\n    return layer;\r\n  }\r\n  /**\r\n   * @return layer with the passed layer name\r\n   * */\r\n  getLayerNamed(name) {\r\n    return _movableLayer.getChildNamed(name);\r\n  }\r\n  /**\r\n   * Moves the map the amount of given x and y pixels. Note that this is not the destination coordinate, but the amount of movement that the map should move. Internally it moves the movableLayer, taking into account necessary properties (like scale).\r\n   *\r\n   * @param {{x: Number, y: Number}} coord      The amount of x and y coordinates we want the map to move. I.e. { x: 5, y: 0 }. With this we want the map to move horizontally 5 pixels and vertically stay at the same position.\r\n   * @param {Object} informCoordinates          THIS IS EXPERIMENTAL, TO FIX THE INCORRECT EVENT COORDINATES THIS SEND TO mapEvents, WHEN SCALING\r\n   **/\r\n  moveMap(coord = { x: 0, y: 0 }, informCoordinates = coord) {\r\n    var realCoordinates = {\r\n      x: Math.round(coord.x / _staticLayer.getScale()),\r\n      y: Math.round(coord.y / _staticLayer.getScale())\r\n    };\r\n    _movableLayer.move(realCoordinates);\r\n    mapEvents.publish(\"mapMoved\", informCoordinates || realCoordinates);\r\n    this.drawOnNextTick();\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Cache the map. This provides significant performance boost, when used correctly. cacheMap iterates through all the\r\n   * layer on the map and caches the ones that return true from getCacheEnabled-method.\r\n   **/\r\n  cacheMap() {\r\n    _movableLayer.children.forEach(child => {\r\n      child.setCache(child.getCacheEnabled());\r\n    });\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * unCache the map.\r\n   *\r\n   * @return this map instance\r\n   * */\r\n  unCacheMap() {\r\n    _movableLayer.children.forEach(child => {\r\n      child.setCache(false);\r\n    });\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Activate plugins for the map. Plugins need .pluginName property and .init-method\r\n   *\r\n   * @param {Object[]} pluginsArray         Array that consists the plugin modules to be activated\r\n   * */\r\n  activatePlugins(pluginsArray = []) {\r\n    pluginsArray.forEach(plugin => {\r\n      this.activatePlugin(plugin);\r\n    });\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Activate plugins for the map. Plugins need .pluginName property and .init-method\r\n   *\r\n   * @param {Object} plugin        Plugin module instance.\r\n   * */\r\n  activatePlugin(plugin) {\r\n    try {\r\n      if (!plugin || !plugin.pluginName) {\r\n        throw new Error(\"plugin or plugin.pluginName missing\");\r\n      }\r\n\r\n      if (this.plugins.add(plugin[plugin.pluginName])) {\r\n        plugin[plugin.pluginName].init(this);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"An error initializing plugin \" + plugin ? plugin.pluginName : \"no plugin name\", e);\r\n    }\r\n  }\r\n  /**\r\n   * getter and setter for detecting if map is moved and setting the maps status as moved or not moved\r\n   *\r\n   * @param {Boolean} yesOrNo         Has the map moved, or not.\r\n   * @param {Boolean} isFinal         Is this the last time map has been moved with this event chain.\r\n   * */\r\n  mapMoved(yesOrNo, isFinal) {\r\n    isFinal && mapEvents.publish(\"mapMovedFinal\");\r\n\r\n    if (yesOrNo !== undefined) {\r\n      this._mapInMove = yesOrNo;\r\n      return yesOrNo;\r\n    }\r\n\r\n    return this._mapInMove;\r\n  }\r\n  setPrototype(property, value) {\r\n    var thisPrototype = Object.getPrototypeOf(this);\r\n\r\n    thisPrototype[property] = value;\r\n  }\r\n  /**\r\n   * Resize the canvas to fill the whole browser area. Uses this.eventCBs.fullsize as callback, so when you need to overwrite\r\n   * the eventlistener callback use this.eventCBs\r\n   */\r\n  toggleFullsize() {\r\n    if (!boundResizer) {\r\n      boundResizer = _resizeCanvas.bind(this);\r\n    }\r\n\r\n    mapEvents.publish(\"mapResized\");\r\n\r\n    return eventlisteners.toggleFullSizeListener(boundResizer);\r\n  }\r\n  /**\r\n   * Toggles fullscreen mode. Uses this.eventCBs.fullscreen as callback, so when you need to overwrite\r\n   * the eventlistener callback use this.eventCBs\r\n   * */\r\n  toggleFullScreen () {\r\n    var eventListenerCB = setFullScreen.bind(this);\r\n\r\n    eventlisteners.toggleFullscreen(eventListenerCB);\r\n  }\r\n  getSubcontainersUnderPoint(globalCoords) {\r\n    var primaryLayers = this.getMovableLayer().getPrimaryLayers();\r\n    var allMatchingSubcontainers = [];\r\n    var allCoords = {\r\n      globalCoords: globalCoords,\r\n      localCoords: this.getMovableLayer().toLocal(new PIXI.Point(globalCoords.x, globalCoords.y))\r\n    };\r\n    var thisLayersSubcontainers;\r\n\r\n    allCoords.localCoords.width = globalCoords.width;\r\n    allCoords.localCoords.height = globalCoords.height;\r\n\r\n    primaryLayers.forEach(layer => {\r\n      thisLayersSubcontainers = layer.getSubContainersByCoordinates(allCoords.localCoords);\r\n      allMatchingSubcontainers = allMatchingSubcontainers.concat(thisLayersSubcontainers);\r\n    });\r\n\r\n    return allMatchingSubcontainers;\r\n  }\r\n  /**\r\n   * Filter objects based on quadtree and then based on possible group provided\r\n   *\r\n   * @param  {x: Number, y: Number} globalCoords      The global coordinates on canvas, that is hitTested.\r\n   * @param  {String} type                            Type of the objects / layer to find.\r\n   * @return {Array}                                  Array of object found on the map.\r\n   */\r\n  getObjectsUnderPoint(globalCoords = { x: 0, y: 0, width: 0, height: 0 }, type = undefined) {\r\n    var objects = {};\r\n    var allCoords = {\r\n      globalCoords: globalCoords,\r\n      localCoords: this.getMovableLayer().toLocal(new PIXI.Point(globalCoords.x, globalCoords.y))\r\n    };\r\n    // allCoords.localCoords.width = globalCoords.width;\r\n    // allCoords.localCoords.height = globalCoords.height;\r\n\r\n    if (this.usesSubContainers()) {\r\n      let allMatchingSubcontainers = [];\r\n      let thisLayersSubcontainers = [];\r\n      let primaryLayers = this.getMovableLayer().getPrimaryLayers();\r\n\r\n      primaryLayers.forEach(layer => {\r\n        thisLayersSubcontainers = layer.getSubContainersByCoordinates(allCoords.globalCoords);\r\n        allMatchingSubcontainers = allMatchingSubcontainers.concat(thisLayersSubcontainers);\r\n      });\r\n\r\n      if (type) {\r\n        objects[type] = this.objectManager.retrieve(allCoords, type, {\r\n          subcontainers: allMatchingSubcontainers,\r\n          size: {\r\n            width: globalCoords.width,\r\n            height: globalCoords.height\r\n          }\r\n        });\r\n      } else {\r\n        objects = this.objectManager.retrieve(allCoords, type, {\r\n          subcontainers: allMatchingSubcontainers,\r\n          size: {\r\n            width: globalCoords.width,\r\n            height: globalCoords.height\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      if (type) {\r\n        objects[type] = this.objectManager.retrieve(allCoords, type, {\r\n            quadtree: true,\r\n            size: {\r\n              width: globalCoords.width,\r\n              height: globalCoords.height\r\n            }\r\n          });\r\n      } else {\r\n        objects = this.objectManager.retrieve(allCoords, type, {\r\n          quadtree: true,\r\n          size: {\r\n            width: globalCoords.width,\r\n            height: globalCoords.height\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return objects;\r\n  }\r\n  /**\r\n   * @return { x: Number, y: Number }, current coordinates for the moved map\r\n   * */\r\n  getMapPosition() {\r\n    return {\r\n      x: _movableLayer.x,\r\n      y: _movableLayer.y\r\n    };\r\n  }\r\n  getCanvas() {\r\n    return this.canvas;\r\n  }\r\n  getZoomLayer() {\r\n    return _staticLayer;\r\n  }\r\n  setScale(scale) {\r\n    return _staticLayer.setScale(scale);\r\n  }\r\n  getScale() {\r\n    return _staticLayer.getScale();\r\n  }\r\n  getUILayer() {\r\n    return _staticLayer;\r\n  }\r\n  getMovableLayer() {\r\n    return _movableLayer;\r\n  }\r\n  getRenderer() {\r\n    return _renderer;\r\n  }\r\n  getStage() {\r\n    return _staticLayer;\r\n  }\r\n  getStaticLayer() {\r\n    return _staticLayer;\r\n  }\r\n  /*************************************\r\n   ******* APIS THROUGH PLUGINS ********\r\n   ************************************/\r\n  zoomIn() { return \"notImplementedYet. Activate with plugin\"; }\r\n  zoomOut() { return \"notImplementedYet. Activate with plugin\"; }\r\n  /*\r\n   * Selection of objects on the map. For more efficient solution, we implement these APIs thorugh plugin.\r\n   * Default uses quadtree\r\n   * @param { x: Number, y: Number } coordinates to search from\r\n   * @param { String } type type of the objects to search for\r\n   * @param { String } object The object to add\r\n   * */\r\n  addObjectsForSelection() { return \"notImplementedYet\"; }\r\n  /*\r\n   * Selection of objects on the map. For more efficient solution, we implement these APIs thorugh plugin.\r\n   * Default uses quadtree\r\n   *\r\n   * @param {{x: Number, y: Number }} coordinates to search from\r\n   * @param { String } type type of the objects to search for\r\n   * @param { String } object The object to add\r\n   * */\r\n  removeObjectsForSelection() { return \"notImplementedYet\"; }\r\n  /*\r\n   * Selection of objects on the map. For more efficient solution, we implement these APIs thorugh plugin.\r\n   * Default uses quadtree\r\n   * @param { x: Number, y: Number } coordinates to search from\r\n   * @param { String } shape The shape to match against\r\n   * @param { String } type type of the objects to search for\r\n   * */\r\n  getObjectsUnderShape() { return \"notImplementedYet\"; /* Can be implemented if needed. We need more sophisticated quadtree for this */ }\r\n}\r\n\r\n/***********************\r\n******* PRIVATE ********\r\n***********************/\r\n/**\r\n * @private\r\n * This handles the default drawing of the map, so that map always updates when drawOnNextTick === true. This tick\r\n * callback is always set and should not be removed or overruled\r\n */\r\nfunction _defaultTick(map, ticker) {\r\n  const ONE_SECOND = 1000;\r\n  var FPSCount = 0;\r\n  var fpsTimer = new Date().getTime();\r\n  var renderStart, totalRenderTime;\r\n\r\n  ticker.add(function () {\r\n    if (_drawMapOnNextTick === true) {\r\n      if (map.trackFPSCB) {\r\n        renderStart = new Date().getTime();\r\n      }\r\n      _renderer.render(_staticLayer);\r\n      _drawMapOnNextTick = false;\r\n      if (map.trackFPSCB) {\r\n        totalRenderTime += Math.round( Math.abs( renderStart - new Date().getTime() ) );\r\n      }\r\n    }\r\n    if (map.trackFPSCB) {\r\n      FPSCount++;\r\n\r\n      if (fpsTimer + ONE_SECOND < new Date().getTime()) {\r\n        map.trackFPSCB( {\r\n          FPS: FPSCount,\r\n          FPStime: fpsTimer,\r\n          renderTime: totalRenderTime,\r\n          drawCount: _renderer.drawCount\r\n        });\r\n        FPSCount = 0;\r\n        totalRenderTime = 0;\r\n        fpsTimer = new Date().getTime();\r\n      }\r\n    }\r\n  });\r\n}\r\n/**\r\n * @private\r\n * Resizes the canvas to the current most wide and high element status. Basically canvas size === window size.\r\n */\r\nfunction _resizeCanvas() {\r\n  let windowSize = utils.resize.getWindowSize();\r\n\r\n  _renderer.autoResize = true;\r\n  _renderer.resize(windowSize.x, windowSize.y);\r\n  mapEvents.publish(\"mapResized\");\r\n  this.drawOnNextTick();\r\n}\r\n/**\r\n * @private\r\n * Activate the browsers fullScreen mode and expand the canvas to fullsize\r\n */\r\nfunction setFullScreen() {\r\n  utils.resize.toggleFullScreen();\r\n  mapEvents.publish(\"mapResized\");\r\n  _resizeCanvas.call(this);\r\n}"
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_drawMapOnNextTick",
    "memberof": "core/Map.js",
    "longname": "core/Map.js~_drawMapOnNextTick",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/Map.js",
    "importStyle": null,
    "description": "********************\n***** VARIABLES *******\n*********************",
    "lineNumber": 14,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isMapReadyPromises",
    "memberof": "core/Map.js",
    "longname": "core/Map.js~isMapReadyPromises",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/Map.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Map",
    "memberof": "core/Map.js",
    "longname": "core/Map.js~Map",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/Map.js",
    "importStyle": "{Map}",
    "description": "Main class for the whole engine, which initializes the whole structure and plugins\n\nYou use the class by instantiating it with new and then initialize with init-method:\nvar map = new Map(canvasElement, mapOptions );\npromises = map.init( gameData.pluginsToActivate, mapData.startPoint );\n\nPlugins can be added with activatePlugins-method by prodiving init(map) method in the plugin. Plugins are always\nfunctions, not objects that are instantiated. Plugins are supposed to extend the map object or anything in it via\nit's public methods.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@requires",
        "tagValue": "PIXI.JS framework in global namespace"
      },
      {
        "tagName": "@requires",
        "tagValue": "canvas (webGL support recommended) HTML5-element supported."
      },
      {
        "tagName": "@requires",
        "tagValue": "Hammer for touch events"
      },
      {
        "tagName": "@requires",
        "tagValue": "Hamster for mouse scroll events"
      },
      {
        "tagName": "@requires",
        "tagValue": "Plugins that use eventlistener by default, use pointer events polyfill, such as: https://github.com/jquery/PEP\nPlugins and eventlistener can be overriden, but they user pointer events by default (either the browser must support\nthem or use polyfill)"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 7,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#constructor",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Map"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTML element"
        ],
        "spread": false,
        "optional": false,
        "name": "canvasContainer",
        "description": "HTML element which will be container for the created canvas element"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Extra properties"
      },
      {
        "nullable": null,
        "types": [
          "{x: Integer, y: Integer}"
        ],
        "spread": false,
        "optional": false,
        "name": "props.startCoord",
        "description": "Coordinates where the map starts at"
      },
      {
        "nullable": null,
        "types": [
          "{width: Integer, height: Integer}"
        ],
        "spread": false,
        "optional": false,
        "name": "props.bounds",
        "description": "Bounds of the map / mapSize"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.rendererOptions",
        "description": "Renderer options passed to PIXI.autoDetectRenderer"
      },
      {
        "nullable": null,
        "types": [
          "{width: Integer, height: Integer}"
        ],
        "spread": false,
        "optional": false,
        "name": "props.subContainers",
        "description": "Subcontainers size in pixels. If given, will activate subcontainers. If not given or false, subcontainers are not used.area."
      },
      {
        "nullable": null,
        "types": [
          "function(FPS: Number, FPStime: Number, renderTime: Number, drawCount: Number): void"
        ],
        "spread": false,
        "optional": false,
        "name": "trackFPSCB",
        "description": "Callback function for tracking FPS in renderer. So this is used for debugging and optimizing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Map"
      ],
      "spread": false,
      "description": "new Map instance"
    },
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canvas",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#canvas",
    "access": null,
    "description": "canvas element that was generated and is being used by this new generated Map instance.",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "Canvas element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 9,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "plugins",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#plugins",
    "access": null,
    "description": "list of plugins that the map uses and are initialized",
    "see": [
      "class/core/Map.js~Map.html#instance-method-activatePlugins"
    ],
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 10,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "subContainersConfig",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#subContainersConfig",
    "access": null,
    "description": "Subcontainers size that we want to generate, when layers use subcontainers",
    "lineNumber": 121,
    "type": {
      "nullable": null,
      "types": [
        "{width: Integer, height: Int}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 11,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "trackFPSCB",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#trackFPSCB",
    "access": null,
    "description": "Callback function that gets the current FPS on the map and shows it in DOM",
    "lineNumber": 127,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "objectManager",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#objectManager",
    "access": null,
    "description": "ObjectManager instance. Responsible for retrieving the objects from the map, on desired occasions. Like when the player clicks the map to select some object.",
    "lineNumber": 133,
    "type": {
      "nullable": null,
      "types": [
        "ObjectManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 13,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_mapInMove",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#_mapInMove",
    "access": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#init",
    "access": null,
    "description": "initialization method",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "init"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array of Strings"
        ],
        "spread": false,
        "optional": false,
        "name": "plugins",
        "description": "Plugins to be activated for the map. Normally you should give the plugins here\ninstead of separately passing them to activatePlugins method. You can provide the module strings or module objects."
      },
      {
        "nullable": null,
        "types": [
          "x: ? y:?"
        ],
        "spread": false,
        "optional": false,
        "name": "coord",
        "description": "Starting coordinates for the map"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "tickCB",
        "description": "callback function for tick. Tick callback is initiated in every frame. So map draws happen during ticks"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Fullsize: Do we set fullsize canvas or not."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Returns an array of Promises. If this is empty / zero. Then there is nothing to wait for, if it contains promises, you have to wait for them to finish for the plugins to work and map be ready."
    },
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "whenReady",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#whenReady",
    "access": null,
    "description": "The correct way to update / redraw the map. Check happens at every tick and thus in every frame.",
    "lineNumber": 182,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "the current map instance"
    },
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawOnNextTick",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#drawOnNextTick",
    "access": null,
    "description": "The correct way to update / redraw the map. Check happens at every tick and thus in every frame.",
    "lineNumber": 189,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "the current map instance"
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getLayersWithAttributes",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getLayersWithAttributes",
    "access": null,
    "description": "The correct way to update / redraw the map. Check happens at every tick and thus in every frame.",
    "lineNumber": 198,
    "params": [
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "the current map instance"
    },
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createUILayer",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#createUILayer",
    "access": null,
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "default UI layer",
        "defaultValue": "default UI layer"
      },
      {
        "name": "coord",
        "optional": true,
        "types": [
          "{\"x\": number, \"y\": number}"
        ],
        "defaultRaw": {
          "x": 0,
          "y": 0
        },
        "defaultValue": "{\"x\":0,\"y\":0}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addLayer",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#addLayer",
    "access": null,
    "description": "All parameters are passed to Map_layer constructor",
    "lineNumber": 212,
    "params": [
      {
        "name": "layerOptions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created Map_layer instance"
    },
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "usesSubContainers",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#usesSubContainers",
    "access": null,
    "description": "Does the map use subContainers",
    "lineNumber": 227,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSubContainerConfigs",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getSubContainerConfigs",
    "access": null,
    "description": null,
    "lineNumber": 230,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getViewportArea",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getViewportArea",
    "access": null,
    "description": "Get the size of area that is shown to the player. Depends a bit if we want to show the maximum possible or current.",
    "lineNumber": 239,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLocal",
        "description": "Do we want to use moving layer or static (global) coordinates"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "x- and y-coordinates and the width and height of the viewport"
    },
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeLayer",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#removeLayer",
    "access": null,
    "description": null,
    "lineNumber": 252,
    "params": [
      {
        "nullable": null,
        "types": [
          "Map_layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "the layer object to be removed"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getLayerNamed",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getLayerNamed",
    "access": null,
    "description": null,
    "lineNumber": 260,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "layer with the passed layer name"
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "moveMap",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#moveMap",
    "access": null,
    "description": "Moves the map the amount of given x and y pixels. Note that this is not the destination coordinate, but the amount of movement that the map should move. Internally it moves the movableLayer, taking into account necessary properties (like scale).",
    "lineNumber": 269,
    "params": [
      {
        "nullable": null,
        "types": [
          "{x: Number, y: Number}"
        ],
        "spread": false,
        "optional": false,
        "name": "coord",
        "description": "The amount of x and y coordinates we want the map to move. I.e. { x: 5, y: 0 }. With this we want the map to move horizontally 5 pixels and vertically stay at the same position."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "informCoordinates",
        "description": "THIS IS EXPERIMENTAL, TO FIX THE INCORRECT EVENT COORDINATES THIS SEND TO mapEvents, WHEN SCALING"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cacheMap",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#cacheMap",
    "access": null,
    "description": "Cache the map. This provides significant performance boost, when used correctly. cacheMap iterates through all the\nlayer on the map and caches the ones that return true from getCacheEnabled-method.",
    "lineNumber": 284,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unCacheMap",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#unCacheMap",
    "access": null,
    "description": "unCache the map.",
    "lineNumber": 296,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "this map instance"
    },
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "activatePlugins",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#activatePlugins",
    "access": null,
    "description": "Activate plugins for the map. Plugins need .pluginName property and .init-method",
    "lineNumber": 308,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "pluginsArray",
        "description": "Array that consists the plugin modules to be activated"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "activatePlugin",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#activatePlugin",
    "access": null,
    "description": "Activate plugins for the map. Plugins need .pluginName property and .init-method",
    "lineNumber": 320,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "plugin",
        "description": "Plugin module instance."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "mapMoved",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#mapMoved",
    "access": null,
    "description": "getter and setter for detecting if map is moved and setting the maps status as moved or not moved",
    "lineNumber": 339,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "yesOrNo",
        "description": "Has the map moved, or not."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isFinal",
        "description": "Is this the last time map has been moved with this event chain."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_mapInMove",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#_mapInMove",
    "access": null,
    "description": null,
    "lineNumber": 343,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPrototype",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#setPrototype",
    "access": null,
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "params": [
      {
        "name": "property",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toggleFullsize",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#toggleFullsize",
    "access": null,
    "description": "Resize the canvas to fill the whole browser area. Uses this.eventCBs.fullsize as callback, so when you need to overwrite\nthe eventlistener callback use this.eventCBs",
    "lineNumber": 358,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toggleFullScreen",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#toggleFullScreen",
    "access": null,
    "description": "Toggles fullscreen mode. Uses this.eventCBs.fullscreen as callback, so when you need to overwrite\nthe eventlistener callback use this.eventCBs",
    "lineNumber": 371,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSubcontainersUnderPoint",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getSubcontainersUnderPoint",
    "access": null,
    "description": null,
    "lineNumber": 376,
    "undocument": true,
    "params": [
      {
        "name": "globalCoords",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getObjectsUnderPoint",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getObjectsUnderPoint",
    "access": null,
    "description": "Filter objects based on quadtree and then based on possible group provided",
    "lineNumber": 402,
    "params": [
      {
        "nullable": null,
        "types": [
          "x: Number, y: Number"
        ],
        "spread": false,
        "optional": false,
        "name": "globalCoords",
        "description": "The global coordinates on canvas, that is hitTested."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Type of the objects / layer to find."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Array of object found on the map."
    },
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getMapPosition",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getMapPosition",
    "access": null,
    "description": null,
    "lineNumber": 463,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{ x: Number, y: Number }, current coordinates for the moved map"
    },
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCanvas",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getCanvas",
    "access": null,
    "description": null,
    "lineNumber": 469,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getZoomLayer",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getZoomLayer",
    "access": null,
    "description": null,
    "lineNumber": 472,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setScale",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#setScale",
    "access": null,
    "description": null,
    "lineNumber": 475,
    "undocument": true,
    "params": [
      {
        "name": "scale",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getScale",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getScale",
    "access": null,
    "description": null,
    "lineNumber": 478,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUILayer",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getUILayer",
    "access": null,
    "description": null,
    "lineNumber": 481,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getMovableLayer",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getMovableLayer",
    "access": null,
    "description": null,
    "lineNumber": 484,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRenderer",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getRenderer",
    "access": null,
    "description": null,
    "lineNumber": 487,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getStage",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getStage",
    "access": null,
    "description": null,
    "lineNumber": 490,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getStaticLayer",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getStaticLayer",
    "access": null,
    "description": null,
    "lineNumber": 493,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "zoomIn",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#zoomIn",
    "access": null,
    "description": "**********************************\n****** APIS THROUGH PLUGINS ********\n**********************************",
    "lineNumber": 499,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 48,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "zoomOut",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#zoomOut",
    "access": null,
    "description": null,
    "lineNumber": 500,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addObjectsForSelection",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#addObjectsForSelection",
    "access": null,
    "description": null,
    "lineNumber": 508,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeObjectsForSelection",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#removeObjectsForSelection",
    "access": null,
    "description": null,
    "lineNumber": 517,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getObjectsUnderShape",
    "memberof": "core/Map.js~Map",
    "longname": "core/Map.js~Map#getObjectsUnderShape",
    "access": null,
    "description": null,
    "lineNumber": 525,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_defaultTick",
    "memberof": "core/Map.js",
    "longname": "core/Map.js~_defaultTick",
    "access": "private",
    "export": false,
    "importPath": "war_map_engine/core/Map.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 536,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      },
      {
        "name": "ticker",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 53,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_resizeCanvas",
    "memberof": "core/Map.js",
    "longname": "core/Map.js~_resizeCanvas",
    "access": "private",
    "export": false,
    "importPath": "war_map_engine/core/Map.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 574,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setFullScreen",
    "memberof": "core/Map.js",
    "longname": "core/Map.js~setFullScreen",
    "access": "private",
    "export": false,
    "importPath": "war_map_engine/core/Map.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 586,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/mapEvents.js",
    "memberof": null,
    "longname": "core/mapEvents.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * This module handles map events. Like informing map movement, object selection and other changes.\r\n *\r\n * Events atm:\r\n * - mapMoved\r\n * - mapMovedFinal\r\n * - mapResize\r\n *\r\n * @todo I want this to go the ES6 way, not the only global exception!\r\n */\r\n/***********************\r\n******** IMPORT ********\r\n***********************/\r\n// import { PubSub } from '/assets/lib/pubsub/pubsub';\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport const mapEvents = setupMapEvents();\r\n\r\n/***********************\r\n******** PUBLIC ********\r\n***********************/\r\nfunction setupMapEvents () {\r\n  return {\r\n    subscribe,\r\n    publish\r\n  };\r\n\r\n  function subscribe(type, cb) {\r\n    PubSub.subscribe(type, cb);\r\n  }\r\n  function publish(type, ...data) {\r\n    console.log(\"EVENT: \" + type);\r\n    PubSub.publish(type, ...data);\r\n  }\r\n}"
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "mapEvents",
    "memberof": "core/mapEvents.js",
    "longname": "core/mapEvents.js~mapEvents",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/mapEvents.js",
    "importStyle": "{mapEvents}",
    "description": "********************\n******** API **********\n*********************",
    "lineNumber": 21,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupMapEvents",
    "memberof": "core/mapEvents.js",
    "longname": "core/mapEvents.js~setupMapEvents",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/mapEvents.js",
    "importStyle": null,
    "description": "********************\n******* PUBLIC ********\n*********************",
    "lineNumber": 26,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/Map_layers.js",
    "memberof": null,
    "longname": "core/Map_layers.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/***********************\r\n****** VARIABLES *******\r\n***********************/\r\nvar _UIObjects = [];\r\n\r\n/***********************\r\n******** EXPORT ********\r\n***********************/\r\nexport class Map_layer extends PIXI.Container {\r\n  /**\r\n   * Creates a basic layer for the Map. This type of layer can not hold subcontainers. Note that different devices and graphic cards can only have specific size of bitmap drawn, and PIXI cache always draws a bitmap thus the default is: 4096, based on this site: http://webglstats.com/ and MAX_TEXTURE_SIZE. This is important also when caching.\r\n   *\r\n   * @param {Object} options                            optional options\r\n   * @param {String} options.name                       Layers name, used for identifying the layer. Useful in debugging, but can be used for finding correct layers too\r\n   * @param {{x: Integer, y: Integer}} options.coord    coord starting coords of layer. Relative to parent map layer.\r\n   * @param {Boolean} options.specialLayer              Is this layer special (e.g. UILayer not included in normal operations)\r\n   **/\r\n  constructor(options = {\r\n      name: \"\",\r\n      coord: { x: 0, y: 0 },\r\n      specialLayer: false } ) {\r\n    var { name, coord, specialLayer } = options;\r\n\r\n    super();\r\n    Object.assign(this, coord);\r\n\r\n    /**\r\n     * Layers name, used for identifying the layer. Useful in debugging, but can be used for finding correct layers too\r\n     *\r\n     * @attribute\r\n     * @type {String}\r\n     */\r\n    this.name = \"\" + name;\r\n    /**\r\n     * Is this layer special (e.g. UILayer not included in normal operations)\r\n     *\r\n     * @attribute\r\n     * @type {Boolean}\r\n     */\r\n    this.specialLayer = !!specialLayer;\r\n  }\r\n  /**\r\n   * Does this layer use subcontainers.\r\n   *\r\n   * @return {Boolean} true = uses subcontainers.\r\n   */\r\n  hasSubContainers() {\r\n    return this.subContainersConfig ? true : false;\r\n  }\r\n  /**\r\n   * Is this layer cached at the moment or not.\r\n   *\r\n   * @return {Boolean} true = is cached\r\n   */\r\n  getCurrentCache() {\r\n    return this.cacheAsBitmap;\r\n  }\r\n  /**\r\n   * Move layer based on given amounts\r\n   *\r\n   * @param {{x: Integer, y: Integer}} coord        The amount of x and y coordinates we want the layer to move. I.e. { x: 5, y: 0 }. This would move the map 5 pixels horizontally and 0 pixels vertically\r\n   **/\r\n  move(coord) {\r\n    this.x += coord.x;\r\n    this.y += coord.y;\r\n    this.drawThisChild = true;\r\n  }\r\n  /**\r\n   * set layer scale\r\n   *\r\n   * @param {Number} amount The amount that you want the layer to scale.\r\n   * @return {Number} The same amount that was given, except after transform to 2 decimals and type cast to Number\r\n   * */\r\n  setScale(amount) {\r\n    this.scale.x = this.scale.y = +amount.toFixed(2);\r\n\r\n    return this.scale.x;\r\n  }\r\n  /**\r\n   * get layer scale\r\n   *\r\n   * @return {Boolean} current amount of scale\r\n   * */\r\n  getScale() {\r\n    return this.scale.x;\r\n  }\r\n    /**\r\n   * get UIObjects on this layer, if there are any, or defaulty empty array if no UIObjects are active\r\n   *\r\n   * @return {Array} current UIObjects\r\n   * */\r\n  getUIObjects() {\r\n    return _UIObjects;\r\n  }\r\n  /**\r\n   * Remove all the UIObjects from this layer\r\n   *\r\n   * @return {Array} empty UIObjects array\r\n   * */\r\n  emptyUIObjects() {\r\n    _UIObjects.map(obj => {\r\n      this.removeChild(obj);\r\n      obj = null;\r\n    });\r\n\r\n    return _UIObjects;\r\n  }\r\n  /**\r\n   * Add UIObjects to this layer\r\n   *\r\n   * @param {Object || Array} objects           Objects can be an object containing one object to add or an Array of objects to add.\r\n   * @return {Array}                            All the UIObjects currently on this layer\r\n   * */\r\n  addUIObjects(objects) {\r\n    _UIObjects = _UIObjects || [];\r\n    if (Array.isArray(objects)) {\r\n      objects.forEach( (/*thisObj*/) => {\r\n        /* We want to make a copy of the object, since if add existing child from another container to UI,\r\n         * it will get removed from the original container and messes up the hierarchy. Probably making a deep copy\r\n         * directly isn't the best way, but it's the easiest atm. */\r\n        //let newObj = utils.general.deepCopy(thisObj);\r\n\r\n        //this.addChild(newObj);\r\n      });\r\n    } else {\r\n      //let newObj = utils.general.deepCopy(objects);\r\n      let newObj = objects;\r\n\r\n      newObj.specialLayer = true;\r\n      this.addChild( newObj );\r\n    }\r\n    _UIObjects.push( objects );\r\n\r\n    return _UIObjects;\r\n  }\r\n  /**\r\n   * Get primary layers, that this layer holds as children. So basically all children that are not special layers (such as UI layers etc.)\r\n   *\r\n   * @return {Array}                            Primary children layers under this layer\r\n   * */\r\n  getPrimaryLayers() {\r\n    return this.children.filter(thisChild => {\r\n      return !thisChild.specialLayer;\r\n    });\r\n  }\r\n  /**\r\n   * Get all objects that are this layers children or subcontainers children. Does not return layers, but the objects.\r\n   *\r\n   * @return {Array}                            All the objects (not layers) found under this layer\r\n   * */\r\n  getObjects() {\r\n    var allObjects = [];\r\n\r\n    if (this.hasSubContainers()) {\r\n      this.subContainerList.forEach(subcontainer => {\r\n        allObjects.concat(subcontainer.children);\r\n      });\r\n    }\r\n\r\n    return allObjects;\r\n  }\r\n  /**\r\n   * @method setCache\r\n   *\r\n   * @param {Boolean} status      true = activate cache, false = disable cache\r\n   */\r\n  setCache(status) {\r\n    var toCacheStatus = status ? true : false;\r\n\r\n    this.cacheAsBitmap = toCacheStatus;\r\n\r\n    return toCacheStatus;\r\n  }\r\n}\r\n\r\nexport class Map_parentLayer extends Map_layer {\r\n  /**\r\n   * Layer designed to hold subcontainers. But can handle objects too.\r\n   *\r\n   * @param {String}        name layer property name, used for identifiying the layer, usefull in debugging, but used also\r\n   * otherwise too!\r\n   * @param {x: Number, y: Number}  coord starting coords of layer. Relative to parent map layer.\r\n   *\r\n   * Different devices graphic cards can only have specific size of bitmap drawn, and PIXI cache always draws a bitmap\r\n   * thus the default is: 4096, based on this site: http://webglstats.com/ and MAX_TEXTURE_SIZE\r\n   */\r\n  constructor(options = { name: \"\", coord: { x: 0, y: 0 }, subContainers: false, specialLayer: false } ) {\r\n    var { subContainers } = options;\r\n\r\n    super(options);\r\n\r\n    this.oldAddChild = super.addChild.bind(this);\r\n    this.subContainersConfig = subContainers;\r\n    this.subContainerList = [];\r\n  }\r\n  addChild(displayObject) {\r\n    if (this.hasSubContainers()) {\r\n      let correctContainer;\r\n      correctContainer = setCorrectSubContainer(displayObject, this);\r\n      this.oldAddChild(correctContainer);\r\n    } else {\r\n      this.oldAddChild(displayObject);\r\n    }\r\n\r\n    return displayObject;\r\n  }\r\n  getSubContainerConfigs() {\r\n    return this.subContainersConfig;\r\n  }\r\n  getSubContainersByCoordinates(coordinates) {\r\n    if (!this.hasSubContainers()) {\r\n      throw new Error(\"tried to retrieve subContainers, when they are not present\");\r\n    }\r\n\r\n    var foundSubcontainers, tempCoordinates;\r\n\r\n    tempCoordinates = this.toLocal(new PIXI.Point(coordinates.x, coordinates.y));\r\n    tempCoordinates.width = coordinates.width;\r\n    tempCoordinates.height = coordinates.height;\r\n\r\n    foundSubcontainers = getClosestSubcontainers(this, tempCoordinates);\r\n\r\n    return foundSubcontainers;\r\n  }\r\n  getSubcontainers() {\r\n    return this.subContainerList;\r\n  }\r\n}\r\n\r\nclass Map_subContainer extends PIXI.ParticleContainer {\r\n  /**\r\n   * Subcontainers are containers that hold objects like units and terrain etc. under them. They have some restrictions atm. since they are PIXI.ParticleContainers. But when needed we can extend Map_layers with another class which is subcontainer, but not ParticleContainer at the present there is no need, so we won't extend yet. Subcontainers help the layers to make better movement of the map, by making subcontainers visible or invisible and even helping with selecting objects on the map. Thus we don't need to use our inefficient Quadtree.\r\n   *\r\n   * NOTICE! PIXI.ParticleContainer is much more strict than normal containers. When you encounter issues with it. Please check the restrictions on ParticleContainer.\r\n   *\r\n   * @param {{width: Integer, height: Integer}} size          Size of the subcontainer\r\n   */\r\n  constructor(size) {\r\n    super();\r\n\r\n    this.specialLayer = true;\r\n    this.size = size;\r\n  }\r\n  /**\r\n   * Gets this subcontainers coordinates and size\r\n   *\r\n   * @param {Number} scale                              The size of scale the map currently has\r\n   * @param {{toGlobal: Boolean}} options.toGlobal      Do we get the global coordinates or local\r\n   */\r\n  getSubcontainerArea (scale, options = { toGlobal: true } ) {\r\n    var coordinates;\r\n\r\n    coordinates = options.toGlobal ? this.toGlobal(new PIXI.Point(0, 0)) : this;\r\n    if (scale) {\r\n      coordinates.x /= scale;\r\n      coordinates.y /= scale;\r\n    }\r\n\r\n    return {\r\n      x: Math.round( coordinates.x ),\r\n      y: Math.round( coordinates.y ),\r\n      width: Math.round( this.size.width ),\r\n      height: Math.round( this.size.height )\r\n    };\r\n  }\r\n  /**\r\n   * Set cache on or off for this layer\r\n   *\r\n   * @param {Boolean} status      true = activate cache, false = disable cache\r\n   */\r\n  setCache(status) {\r\n    var toCacheStatus = status ? true : false;\r\n\r\n    this.cacheAsBitmap = toCacheStatus;\r\n\r\n    return toCacheStatus;\r\n  }\r\n}\r\n/***********************\r\n******* PRIVATE ********\r\n***********************/\r\n/**\r\n * [setCorrectSubContainer description]\r\n *\r\n * @private\r\n * @param {[type]} displayObject [description]\r\n * @param {[type]} parentLayer   [description]\r\n */\r\nfunction setCorrectSubContainer(displayObject, parentLayer) {\r\n  var { subContainersConfig, subContainerList } = parentLayer;\r\n  var xIndex = Math.floor( displayObject.x / subContainersConfig.width );\r\n  var yIndex = Math.floor( displayObject.y / subContainersConfig.height );\r\n  var thisSubcontainer;\r\n\r\n  subContainerList[xIndex] = subContainerList[xIndex] || [];\r\n  thisSubcontainer = subContainerList[xIndex][yIndex] = subContainerList[xIndex][yIndex] || [];\r\n\r\n  if (subContainerList[xIndex][yIndex].length <= 0) {\r\n    thisSubcontainer = new Map_subContainer({\r\n      x: xIndex * subContainersConfig.width,\r\n      y: yIndex * subContainersConfig.height,\r\n      width: subContainersConfig.width,\r\n      height: subContainersConfig.height\r\n    });\r\n\r\n    subContainerList[xIndex][yIndex] = thisSubcontainer;\r\n    thisSubcontainer.x = xIndex * subContainersConfig.width;\r\n    thisSubcontainer.y = yIndex * subContainersConfig.height;\r\n    thisSubcontainer.visible = subContainersConfig.isHiddenByDefault ? false : true;\r\n  }\r\n\r\n  displayObject.x -= thisSubcontainer.x;\r\n  displayObject.y -= thisSubcontainer.y;\r\n  subContainerList[xIndex][yIndex].addChild(displayObject);\r\n\r\n  return subContainerList[xIndex][yIndex];\r\n}\r\n/**\r\n * Get the closest subcontainers of the given area.\r\n *\r\n * @private\r\n * @param  {PIXI.Container} layer     The layer being used\r\n * @param  {Number} xIndex            x / horizontal index.\r\n * @param  {Number} yIndex            y / vertical index.\r\n * @return {Array}                    Array of found subcontainers.\r\n */\r\nfunction getClosestSubcontainers(layer, givenCoordinates) {\r\n  var coordinates = {\r\n    x: givenCoordinates.x >= 0 ? givenCoordinates.x : 0,\r\n    y: givenCoordinates.y >= 0 ? givenCoordinates.y : 0,\r\n    width: givenCoordinates.width,\r\n    height: givenCoordinates.height\r\n  };\r\n  var { width, height } = layer.getSubContainerConfigs();\r\n  var allFoundSubcontainers = [];\r\n  var xIndex = Math.floor( coordinates.x / width );\r\n  var yIndex = Math.floor( coordinates.y / height );\r\n  var x2 = coordinates.width ? coordinates.x + coordinates.width :  + coordinates.x;\r\n  var y2 = coordinates.height ? coordinates.y + coordinates.height :  + coordinates.y;\r\n  var widthIndex = Math.floor( x2 / width );\r\n  var heightIndex = Math.floor( y2 / height );\r\n  var subContainerList = layer.subContainerList;\r\n\r\n  for (let thisXIndex = xIndex; thisXIndex <= widthIndex; thisXIndex++) {\r\n    if (thisXIndex >= 0 && subContainerList && subContainerList[thisXIndex]) {\r\n      for (let thisYIndex = yIndex; thisYIndex <= heightIndex; thisYIndex++) {\r\n        if (thisYIndex >= 0 && subContainerList[thisXIndex][thisYIndex]) {\r\n          allFoundSubcontainers.push(subContainerList[thisXIndex][thisYIndex]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return allFoundSubcontainers;\r\n}"
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_UIObjects",
    "memberof": "core/Map_layers.js",
    "longname": "core/Map_layers.js~_UIObjects",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/Map_layers.js",
    "importStyle": null,
    "description": "********************\n***** VARIABLES *******\n*********************",
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Map_layer",
    "memberof": "core/Map_layers.js",
    "longname": "core/Map_layers.js~Map_layer",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/Map_layers.js",
    "importStyle": "{Map_layer}",
    "description": "********************\n******* EXPORT ********\n*********************",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "PIXI~PIXI.Container"
    ]
  },
  {
    "__docId__": 61,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#constructor",
    "access": null,
    "description": "Creates a basic layer for the Map. This type of layer can not hold subcontainers. Note that different devices and graphic cards can only have specific size of bitmap drawn, and PIXI cache always draws a bitmap thus the default is: 4096, based on this site: http://webglstats.com/ and MAX_TEXTURE_SIZE. This is important also when caching.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "optional options"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.name",
        "description": "Layers name, used for identifying the layer. Useful in debugging, but can be used for finding correct layers too"
      },
      {
        "nullable": null,
        "types": [
          "{x: Integer, y: Integer}"
        ],
        "spread": false,
        "optional": false,
        "name": "options.coord",
        "description": "coord starting coords of layer. Relative to parent map layer."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.specialLayer",
        "description": "Is this layer special (e.g. UILayer not included in normal operations)"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#name",
    "access": null,
    "description": "Layers name, used for identifying the layer. Useful in debugging, but can be used for finding correct layers too",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "specialLayer",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#specialLayer",
    "access": null,
    "description": "Is this layer special (e.g. UILayer not included in normal operations)",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasSubContainers",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#hasSubContainers",
    "access": null,
    "description": "Does this layer use subcontainers.",
    "lineNumber": 49,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true = uses subcontainers."
    },
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentCache",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#getCurrentCache",
    "access": null,
    "description": "Is this layer cached at the moment or not.",
    "lineNumber": 57,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true = is cached"
    },
    "generator": false
  },
  {
    "__docId__": 66,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "move",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#move",
    "access": null,
    "description": "Move layer based on given amounts",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "{x: Integer, y: Integer}"
        ],
        "spread": false,
        "optional": false,
        "name": "coord",
        "description": "The amount of x and y coordinates we want the layer to move. I.e. { x: 5, y: 0 }. This would move the map 5 pixels horizontally and 0 pixels vertically"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#x",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#y",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "drawThisChild",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#drawThisChild",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setScale",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#setScale",
    "access": null,
    "description": "set layer scale",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "The amount that you want the layer to scale."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The same amount that was given, except after transform to 2 decimals and type cast to Number"
    },
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getScale",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#getScale",
    "access": null,
    "description": "get layer scale",
    "lineNumber": 86,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "current amount of scale"
    },
    "generator": false
  },
  {
    "__docId__": 72,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUIObjects",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#getUIObjects",
    "access": null,
    "description": "get UIObjects on this layer, if there are any, or defaulty empty array if no UIObjects are active",
    "lineNumber": 94,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "current UIObjects"
    },
    "generator": false
  },
  {
    "__docId__": 73,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "emptyUIObjects",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#emptyUIObjects",
    "access": null,
    "description": "Remove all the UIObjects from this layer",
    "lineNumber": 102,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "empty UIObjects array"
    },
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addUIObjects",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#addUIObjects",
    "access": null,
    "description": "Add UIObjects to this layer",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object ",
          "",
          " Array"
        ],
        "spread": false,
        "optional": false,
        "name": "objects",
        "description": "Objects can be an object containing one object to add or an Array of objects to add."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "All the UIObjects currently on this layer"
    },
    "generator": false
  },
  {
    "__docId__": 75,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPrimaryLayers",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#getPrimaryLayers",
    "access": null,
    "description": "Get primary layers, that this layer holds as children. So basically all children that are not special layers (such as UI layers etc.)",
    "lineNumber": 143,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Primary children layers under this layer"
    },
    "generator": false
  },
  {
    "__docId__": 76,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getObjects",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#getObjects",
    "access": null,
    "description": "Get all objects that are this layers children or subcontainers children. Does not return layers, but the objects.",
    "lineNumber": 153,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "All the objects (not layers) found under this layer"
    },
    "generator": false
  },
  {
    "__docId__": 77,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setCache",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#setCache",
    "access": null,
    "description": null,
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "setCache"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "true = activate cache, false = disable cache"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cacheAsBitmap",
    "memberof": "core/Map_layers.js~Map_layer",
    "longname": "core/Map_layers.js~Map_layer#cacheAsBitmap",
    "access": null,
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Map_parentLayer",
    "memberof": "core/Map_layers.js",
    "longname": "core/Map_layers.js~Map_parentLayer",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/Map_layers.js",
    "importStyle": "{Map_parentLayer}",
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "interface": false,
    "extends": [
      "Map_layer"
    ]
  },
  {
    "__docId__": 80,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/Map_layers.js~Map_parentLayer",
    "longname": "core/Map_layers.js~Map_parentLayer#constructor",
    "access": null,
    "description": "Layer designed to hold subcontainers. But can handle objects too.",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "layer property name, used for identifiying the layer, usefull in debugging, but used also\notherwise too!"
      },
      {
        "nullable": null,
        "types": [
          "x: Number, y: Number"
        ],
        "spread": false,
        "optional": false,
        "name": "coord",
        "description": "starting coords of layer. Relative to parent map layer.\n\nDifferent devices graphic cards can only have specific size of bitmap drawn, and PIXI cache always draws a bitmap\nthus the default is: 4096, based on this site: http://webglstats.com/ and MAX_TEXTURE_SIZE"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "oldAddChild",
    "memberof": "core/Map_layers.js~Map_parentLayer",
    "longname": "core/Map_layers.js~Map_parentLayer#oldAddChild",
    "access": null,
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "subContainersConfig",
    "memberof": "core/Map_layers.js~Map_parentLayer",
    "longname": "core/Map_layers.js~Map_parentLayer#subContainersConfig",
    "access": null,
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "subContainerList",
    "memberof": "core/Map_layers.js~Map_parentLayer",
    "longname": "core/Map_layers.js~Map_parentLayer#subContainerList",
    "access": null,
    "description": null,
    "lineNumber": 196,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addChild",
    "memberof": "core/Map_layers.js~Map_parentLayer",
    "longname": "core/Map_layers.js~Map_parentLayer#addChild",
    "access": null,
    "description": null,
    "lineNumber": 198,
    "undocument": true,
    "params": [
      {
        "name": "displayObject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSubContainerConfigs",
    "memberof": "core/Map_layers.js~Map_parentLayer",
    "longname": "core/Map_layers.js~Map_parentLayer#getSubContainerConfigs",
    "access": null,
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSubContainersByCoordinates",
    "memberof": "core/Map_layers.js~Map_parentLayer",
    "longname": "core/Map_layers.js~Map_parentLayer#getSubContainersByCoordinates",
    "access": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "params": [
      {
        "name": "coordinates",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSubcontainers",
    "memberof": "core/Map_layers.js~Map_parentLayer",
    "longname": "core/Map_layers.js~Map_parentLayer#getSubcontainers",
    "access": null,
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Map_subContainer",
    "memberof": "core/Map_layers.js",
    "longname": "core/Map_layers.js~Map_subContainer",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/Map_layers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 232,
    "undocument": true,
    "interface": false,
    "extends": [
      "PIXI~PIXI.ParticleContainer"
    ]
  },
  {
    "__docId__": 89,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/Map_layers.js~Map_subContainer",
    "longname": "core/Map_layers.js~Map_subContainer#constructor",
    "access": null,
    "description": "Subcontainers are containers that hold objects like units and terrain etc. under them. They have some restrictions atm. since they are PIXI.ParticleContainers. But when needed we can extend Map_layers with another class which is subcontainer, but not ParticleContainer at the present there is no need, so we won't extend yet. Subcontainers help the layers to make better movement of the map, by making subcontainers visible or invisible and even helping with selecting objects on the map. Thus we don't need to use our inefficient Quadtree.\n\nNOTICE! PIXI.ParticleContainer is much more strict than normal containers. When you encounter issues with it. Please check the restrictions on ParticleContainer.",
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "{width: Integer, height: Integer}"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Size of the subcontainer"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "specialLayer",
    "memberof": "core/Map_layers.js~Map_subContainer",
    "longname": "core/Map_layers.js~Map_subContainer#specialLayer",
    "access": null,
    "description": null,
    "lineNumber": 243,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "core/Map_layers.js~Map_subContainer",
    "longname": "core/Map_layers.js~Map_subContainer#size",
    "access": null,
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSubcontainerArea",
    "memberof": "core/Map_layers.js~Map_subContainer",
    "longname": "core/Map_layers.js~Map_subContainer#getSubcontainerArea",
    "access": null,
    "description": "Gets this subcontainers coordinates and size",
    "lineNumber": 252,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "The size of scale the map currently has"
      },
      {
        "nullable": null,
        "types": [
          "{toGlobal: Boolean}"
        ],
        "spread": false,
        "optional": false,
        "name": "options.toGlobal",
        "description": "Do we get the global coordinates or local"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setCache",
    "memberof": "core/Map_layers.js~Map_subContainer",
    "longname": "core/Map_layers.js~Map_subContainer#setCache",
    "access": null,
    "description": "Set cache on or off for this layer",
    "lineNumber": 273,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "true = activate cache, false = disable cache"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cacheAsBitmap",
    "memberof": "core/Map_layers.js~Map_subContainer",
    "longname": "core/Map_layers.js~Map_subContainer#cacheAsBitmap",
    "access": null,
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setCorrectSubContainer",
    "memberof": "core/Map_layers.js",
    "longname": "core/Map_layers.js~setCorrectSubContainer",
    "access": "private",
    "export": false,
    "importPath": "war_map_engine/core/Map_layers.js",
    "importStyle": null,
    "description": "[setCorrectSubContainer description]",
    "lineNumber": 291,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "displayObject",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "parentLayer",
        "description": "[description]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 96,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getClosestSubcontainers",
    "memberof": "core/Map_layers.js",
    "longname": "core/Map_layers.js~getClosestSubcontainers",
    "access": "private",
    "export": false,
    "importPath": "war_map_engine/core/Map_layers.js",
    "importStyle": null,
    "description": "Get the closest subcontainers of the given area.",
    "lineNumber": 329,
    "params": [
      {
        "nullable": null,
        "types": [
          "PIXI.Container"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer being used"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "xIndex",
        "description": "x / horizontal index."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "yIndex",
        "description": "y / vertical index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Array of found subcontainers."
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/map_validators.js",
    "memberof": null,
    "longname": "core/map_validators.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * @todo This needs to be implemented with some 3rd party library. Basically validates class arguments and such. */"
  },
  {
    "__docId__": 98,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/move/map_drag.js",
    "memberof": null,
    "longname": "core/move/map_drag.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * The core plugin for the 2D map engine. Handles moving the map by dragging the map with mouse or touch event.\r\n * Core plugins can always be overwrote if needed.\r\n *\r\n * @require Mobile part requires Hammer.js\r\n * */\r\n\r\n/***********************\r\n******** IMPORT ********\r\n***********************/\r\nimport { eventListeners as eventListenerMod, utils } from '/components/bundles/coreBundle';\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport const pluginName = \"map_drag\";\r\nexport const map_drag = setupMap_drag();\r\n\r\n/***********************\r\n******** PUBLIC ********\r\n***********************/\r\nfunction setupMap_drag() {\r\n  /* Function for setting and getting the mouse offset. Private functions declared bottom */\r\n  var offsetCoords = _offsetCoords();\r\n  var eventListenerCB, eventListener;\r\n\r\n  /***********************\r\n  ********* API **********\r\n  ***********************/\r\n  return {\r\n    init,\r\n    _startDragListener /* Function revealed for testing */\r\n  };\r\n\r\n  /**************************\r\n  ********* PUBLIC **********\r\n  **************************/\r\n  /**\r\n   * Required init functions for the plugin\r\n   *\r\n   * @param {Map object} mapObj - the Map class object\r\n   * */\r\n  function init(map) {\r\n    eventListener = eventListenerMod();\r\n    eventListenerCB = _startDragListener(map);\r\n\r\n    /* Singleton should have been instantiated before, we only retrieve it with 0 params */\r\n    eventListener.toggleDragListener(eventListenerCB);\r\n  }\r\n\r\n  /*****************************\r\n  ********** PRIVATE ***********\r\n  *****************************/\r\n  /**\r\n   * Mobile version. Starts the functionality, uses Hammer.js heavily for doing the drag. More simple and better than\r\n   * desktop version, since we don't need to calculate the drag with several event listener, one is enough with Hammer\r\n   *\r\n   * @private\r\n   * @param {Map Object} map        The current map object\r\n   */\r\n  function _startDragListener( map ) {\r\n    var initialized = false;\r\n\r\n    return function startDrag(e) {\r\n      var coords;\r\n\r\n      if (eventListener.getState(\"zoom\")) {\r\n        return false;\r\n      }\r\n      coords = utils.mouse.eventData.getHAMMERPointerCoords(e);\r\n\r\n      map.mapMoved(true);\r\n\r\n      coords.x = Math.round( coords.x );\r\n      coords.y = Math.round( coords.y );\r\n\r\n      if (!initialized) {\r\n        offsetCoords.setOffset({\r\n          x: coords.x,\r\n          y: coords.y\r\n        });\r\n        initialized = true;\r\n\r\n        return;\r\n      } else if (e.isFinal === true) {\r\n        initialized = false;\r\n        map.mapMoved(false, true);\r\n      }\r\n\r\n      _mapMovement(e, map, coords);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * This handles offset Changes and setting data has map been moved based on it. Also\r\n   * sets basic settings like preventDefault etc.\r\n   *\r\n   * @private\r\n   * @param  {Event} e                        The event being dealt with\r\n   * @param  {Map Object} map                 The map object\r\n   * @param  {x: Number, y: Number} coords    Current pointer coordinates\r\n   */\r\n  function _mapMovement(e, map, coords) {\r\n    var offset, moved;\r\n\r\n    offset = offsetCoords.getOffset();\r\n    moved = {\r\n      x: coords.x - offset.x,\r\n      y: coords.y - offset.y\r\n    };\r\n\r\n    if (moved.x > 0 || moved.y > 0 || moved.x < 0 || moved.y < 0) {\r\n      map.moveMap(moved);\r\n    } else {\r\n      map.mapMoved(false);\r\n    }\r\n\r\n    offsetCoords.setOffset({\r\n      x: coords.x,\r\n      y: coords.y\r\n    });\r\n\r\n    e.preventDefault();\r\n  }\r\n  /**\r\n   * Function for setting and getting the mouse offset.\r\n   * Offset is the distance from the left upper coordinates (global 0, 0 coordinates) on the canvas, to the current /\r\n   * last known mouse coordinates\r\n   */\r\n  function _offsetCoords() {\r\n    var offsetCoords;\r\n\r\n    /****** API ******/\r\n    return {\r\n      setOffset,\r\n      getOffset\r\n    };\r\n\r\n    function setOffset(coords) {\r\n      return ( offsetCoords = coords );\r\n    }\r\n    function getOffset() {\r\n      return offsetCoords;\r\n    }\r\n  }\r\n}"
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pluginName",
    "memberof": "core/move/map_drag.js",
    "longname": "core/move/map_drag.js~pluginName",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/move/map_drag.js",
    "importStyle": "{pluginName}",
    "description": "********************\n******** API **********\n*********************",
    "lineNumber": 18,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "map_drag",
    "memberof": "core/move/map_drag.js",
    "longname": "core/move/map_drag.js~map_drag",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/move/map_drag.js",
    "importStyle": "{map_drag}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupMap_drag",
    "memberof": "core/move/map_drag.js",
    "longname": "core/move/map_drag.js~setupMap_drag",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/move/map_drag.js",
    "importStyle": null,
    "description": "********************\n******* PUBLIC ********\n*********************",
    "lineNumber": 24,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 102,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/ObjectManager.js",
    "memberof": null,
    "longname": "core/ObjectManager.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * This handles the selction of areas and objects in the map. Currently is uses subcontainers or quadtree to do the selection.\r\n *\r\n * @todo It might be a good idea to make the hitDetection more extensive. Now it just uses point or rectangle / bounds to detect hits. It could use sprites or forms. Since we do most work with quadtree, resources shouldn't be the issue.\r\n */\r\n\r\n/***********************\r\n******** IMPORT ********\r\n***********************/\r\nimport { Quadtree } from './utils/Quadtree';\r\nimport { arrays } from '/components/utilities/general';\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\n/**\r\n * this module is responsible for doing hitTesting, like returning the units on certain clicked coordinates or\r\n * when objects or areas collide with each other.\r\n * It uses quadtree for preliminary filtering of matching objects and then the framework specific collision detection\r\n */\r\nexport class ObjectManager {\r\n  /**\r\n   * @param {object} hitDetector Object or function that handles hit detection. This can be omitted in many cases\r\n   */\r\n  constructor(hitDetector) {\r\n    this.quadtrees = {};\r\n    this.hitDetector = hitDetector || {};\r\n  }\r\n  /**\r\n   * Retrieve objects under certain coordinates or area, if size is given\r\n   *\r\n   * @param {{ globalCoords: { x:Number, y:Number }, localCoords: { x:Number, y:Number } }} allCoords         the coordinates which we want to hitTest\r\n   * @param {string} type                                         type of the object / layer that we want to retrieve\r\n   * @param {Object} options                                      optional options\r\n   * @param {Object[]} options.subcontainers                      The subcontainers we match against\r\n   * @param {{ width: Integer, height: Integer }} options.size    Size of the rectangle area to match against, if we want to match rectangle instead of one point\r\n   * @return Array of matched objects\r\n   */\r\n  retrieve(allCoords, type, options = { quadtree: false, subcontainers: [], size: { width: 0, height: 0 } }) {\r\n    var { subcontainers, size } = options;\r\n    var { globalCoords, localCoords } = allCoords;\r\n    var foundObjs = [];\r\n    var quadtreeObjs;\r\n\r\n    if (subcontainers.length === 0) {\r\n      if (!type) {\r\n        quadtreeObjs = Object.keys(this.quadtrees).map((thisIndex) => {\r\n          return this.quadtrees[thisIndex].retrieve(localCoords, size);\r\n        });\r\n      } else {\r\n        quadtreeObjs = this.quadtrees[type].retrieve(localCoords, size);\r\n      }\r\n\r\n      foundObjs = arrays.flatten2Levels(quadtreeObjs);\r\n\r\n      if (!size.width || !size.height) {\r\n        foundObjs = foundObjs.filter(obj => {\r\n          let isHit = obj.hitTest ? obj.hitTest(globalCoords, { hitDetector: this.hitDetector }) : true;\r\n\r\n          return isHit;\r\n        });\r\n      }\r\n    } else {\r\n      subcontainers.forEach(container => {\r\n        foundObjs = foundObjs.concat(container.children);\r\n      });\r\n\r\n      if (!size.width || !size.height) {\r\n        foundObjs = foundObjs.filter(obj => {\r\n          let isHit = obj.hitTest ? obj.hitTest(globalCoords, { hitDetector: this.hitDetector }) : true;\r\n\r\n          return isHit;\r\n        });\r\n      }\r\n    }\r\n\r\n    return foundObjs;\r\n  }\r\n  /**\r\n   * Add object to hitDetection layer\r\n   *\r\n   * @param {string} type                                                 type of the object / layer that we want to add\r\n   * @param {x:Number, y:Number, width:Number, height:Number} hitArea     area that is hitTested\r\n   * @param {Object} obj                                                  object that we want to store. If hitTest succeeds this object is returned.\r\n   */\r\n  addObject(type, hitArea, obj) {\r\n    if (!this.quadtrees[type]) {\r\n      throw new Error(\"Could not add object to objectManager layer, layer not found! (\" + type + \")\");\r\n    }\r\n\r\n    return this.quadtrees[type].add({\r\n        x: hitArea.x,\r\n        y: hitArea.y\r\n      }, {\r\n        width: hitArea.width,\r\n        height: hitArea.height\r\n      },\r\n      obj\r\n    );\r\n  }\r\n  /**\r\n   * Add hitDetection layer. Basically you create layers for different object types, like for example one for the\r\n   * terrain, one for the units and one for the cities. The quadtree does not really require bounds, so we omit them.\r\n   *\r\n   * @param {string} type                                   Type of the layer that we want to add\r\n   * @param {{width: Integer, height: Integer}} bounds      Bounds for the quadtree layer\r\n   * @param {{objects: Number, levels: Number}} extra       quadtree-settings: maximum objects before we split and maximum levels of nested layers\r\n   */\r\n  addLayer(type, bounds, extra = {}) {\r\n    this.quadtrees[type] = new Quadtree(bounds, {\r\n        objects: extra.objects || 10,\r\n        levels: extra.levels || 5\r\n      });\r\n\r\n    return this.quadtrees[type];\r\n  }\r\n}"
  },
  {
    "__docId__": 103,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ObjectManager",
    "memberof": "core/ObjectManager.js",
    "longname": "core/ObjectManager.js~ObjectManager",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/ObjectManager.js",
    "importStyle": "{ObjectManager}",
    "description": "this module is responsible for doing hitTesting, like returning the units on certain clicked coordinates or\nwhen objects or areas collide with each other.\nIt uses quadtree for preliminary filtering of matching objects and then the framework specific collision detection",
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 104,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/ObjectManager.js~ObjectManager",
    "longname": "core/ObjectManager.js~ObjectManager#constructor",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "hitDetector",
        "description": "Object or function that handles hit detection. This can be omitted in many cases"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 105,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "quadtrees",
    "memberof": "core/ObjectManager.js~ObjectManager",
    "longname": "core/ObjectManager.js~ObjectManager#quadtrees",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hitDetector",
    "memberof": "core/ObjectManager.js~ObjectManager",
    "longname": "core/ObjectManager.js~ObjectManager#hitDetector",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "retrieve",
    "memberof": "core/ObjectManager.js~ObjectManager",
    "longname": "core/ObjectManager.js~ObjectManager#retrieve",
    "access": null,
    "description": "Retrieve objects under certain coordinates or area, if size is given",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "{ globalCoords: { x:Number, y:Number }, localCoords: { x:Number, y:Number } }"
        ],
        "spread": false,
        "optional": false,
        "name": "allCoords",
        "description": "the coordinates which we want to hitTest"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "type of the object / layer that we want to retrieve"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "optional options"
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.subcontainers",
        "description": "The subcontainers we match against"
      },
      {
        "nullable": null,
        "types": [
          "{ width: Integer, height: Integer }"
        ],
        "spread": false,
        "optional": false,
        "name": "options.size",
        "description": "Size of the rectangle area to match against, if we want to match rectangle instead of one point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Array of matched objects"
    },
    "generator": false
  },
  {
    "__docId__": 108,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addObject",
    "memberof": "core/ObjectManager.js~ObjectManager",
    "longname": "core/ObjectManager.js~ObjectManager#addObject",
    "access": null,
    "description": "Add object to hitDetection layer",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "type of the object / layer that we want to add"
      },
      {
        "nullable": null,
        "types": [
          "x:Number, y:Number, width:Number, height:Number"
        ],
        "spread": false,
        "optional": false,
        "name": "hitArea",
        "description": "area that is hitTested"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "object that we want to store. If hitTest succeeds this object is returned."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addLayer",
    "memberof": "core/ObjectManager.js~ObjectManager",
    "longname": "core/ObjectManager.js~ObjectManager#addLayer",
    "access": null,
    "description": "Add hitDetection layer. Basically you create layers for different object types, like for example one for the\nterrain, one for the units and one for the cities. The quadtree does not really require bounds, so we omit them.",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Type of the layer that we want to add"
      },
      {
        "nullable": null,
        "types": [
          "{width: Integer, height: Integer}"
        ],
        "spread": false,
        "optional": false,
        "name": "bounds",
        "description": "Bounds for the quadtree layer"
      },
      {
        "nullable": null,
        "types": [
          "{objects: Number, levels: Number}"
        ],
        "spread": false,
        "optional": false,
        "name": "extra",
        "description": "quadtree-settings: maximum objects before we split and maximum levels of nested layers"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/Objects.js",
    "memberof": null,
    "longname": "core/Objects.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * The actual objects used on the map (such as terrain and units), under containers. All of the objects need to have same argumentAPI for creating objects: coords, data, options\r\n */\r\n\r\n/************************\r\n********* IMPORT ********\r\n*************************/\r\nimport { utils } from '/components/bundles/coreBundle';\r\n\r\n/************************\r\n********** API **********\r\n*************************/\r\nexport class Object_sprite extends PIXI.Sprite {\r\n  /**\r\n   * The base class of all sprite objects\r\n   *\r\n   * @extends PIXI.Sprite\r\n   * @param {PIXI.Point} coords                         the coordinate where the object is located at, relative to it's parent\r\n   * @param {Object} data                               objects data, that will be used in the game. It will not actually be mainly used in graphical but rather things  like unit-data and city-data presentations etc.\r\n   * @param {Object} options.currFrame       currFrame the current frames number. This is basically the initial image, we can change it later for animation or such\r\n   */\r\n  constructor(coord = { x: 0, y: 0 }, data = {}, options = { currentFrame: {} }) {\r\n    var { currentFrame } = options;\r\n\r\n    super(currentFrame);\r\n\r\n    /* We need to round the numbers. If there are decimal values, the graphics will get blurry */\r\n    let exactCoords = {\r\n      x: Math.round(coord.x),\r\n      y: Math.round(coord.y)\r\n    };\r\n    this.position.set(exactCoords.x,  exactCoords.y);\r\n    /**\r\n     * Name of the object. Used mostly for debugging\r\n     *\r\n     * @attribute\r\n     * @type {String}\r\n     */\r\n    this.name = \"Objects_sprite_\" + this.id;\r\n    /**\r\n     * Type of the object. Can be used for filtering, ordering or finding correct objects.\r\n     *\r\n     * @attribute\r\n     * @type {String}\r\n     */\r\n    this.type = \"None\";\r\n    /**\r\n     * Is the object highligtable.\r\n     *\r\n     * @attribute\r\n     * @type {Boolean}\r\n     */\r\n    this.highlightable = true;\r\n    /**\r\n     * Is the object selectable.\r\n     *\r\n     * @attribute\r\n     * @type {Boolean}\r\n     */\r\n    this.selectable = true;\r\n    /**\r\n     * Objects custom data. Holds unit statistics and most data. Like unit movement speed etc.\r\n     *\r\n     * @attribute\r\n     * @type {Object}\r\n     */\r\n    this.data = data;\r\n    /**\r\n     * Current frame (from spritesheet) we are showing.\r\n     *\r\n     * @attribute\r\n     * @type {Number}\r\n     */\r\n    this.currentFrame = currentFrame;\r\n    /**\r\n     * Object area width in pixels.\r\n     *\r\n     * @attribute\r\n     * @type {Number}\r\n     */\r\n    this.areaWidth = this.width;\r\n    /**\r\n     * Object area height in pixels.\r\n     *\r\n     * @attribute\r\n     * @type {Number}\r\n     */\r\n    this.areaHeight = this.height;\r\n  }\r\n  /**\r\n   * Drawing the object\r\n   *\r\n   * @param {Number} x coordinate x\r\n   * @param {Number} y coordinate y\r\n   * @return this object instance\r\n   */\r\n  innerDraw(x, y) {\r\n    this.fromFrame ( this.currentFrame );\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Draws new frame to animate or such\r\n   *\r\n   * @param {Number} x                coordinate x\r\n   * @param {Number} y                coordinate y\r\n   * @param {Number} newFrame         New frame number to animate to\r\n   * @return this object instance\r\n   */\r\n  drawNewFrame(x, y, newFrame) {\r\n    this.currentFrame = newFrame;\r\n\r\n    return this.innerDraw(x, y);\r\n  }\r\n  /**\r\n   * Get the area that is reserved for the graphical presenation of this object as a rectangle.\r\n   *\r\n   * @param  {Object} options       toGlobal: Boolean. Should the method return global coordinates or local (movableLayer)\r\n   * @return {Object}               { x: Number, y: Number, width: Number, height: Number}\r\n   */\r\n  getGraphicalArea(options = { toGlobal: true } ) {\r\n    var coordinates;\r\n\r\n    coordinates = options.toGlobal ? this.toGlobal(new PIXI.Point(0,0)) : this;\r\n\r\n    return {\r\n      x: Math.round( coordinates.x ),\r\n      y: Math.round( coordinates.y ),\r\n      width: Math.round( this.width ),\r\n      height: Math.round( this.height )\r\n    };\r\n  }\r\n  /**\r\n   * Coordinate conversion: localToLocal\r\n   *\r\n   * @param  {Number} x                     X coordinate\r\n   * @param  {Number} y                     Y coordinate\r\n   * @param  {PIXI.DisplayObject} target    The DisplayObject where we should target the coordinates for\r\n   * @return {PIXI.Point}                   Coordinates\r\n   */\r\n  localToLocal(x, y, target) {\r\n    var globalCoords = this.toGlobal( { x, y } );\r\n    var targetLocalCoords = target.toLocal( globalCoords );\r\n\r\n    return targetLocalCoords;\r\n  }\r\n  /**\r\n   * Clone object\r\n   *\r\n   * @param  {PIXI renderer} renderer\r\n   * @param  {Object} options               position: Boolean, anchor: Boolean\r\n   * @return {cloned Object}                cloned object\r\n   */\r\n  clone(renderer, options = { position: false, anchor: false }) {\r\n    var newSprite = new PIXI.Sprite();\r\n\r\n    newSprite.texture = this.generateTexture(renderer);\r\n\r\n    if (options.anchor) {\r\n      newSprite.anchor = Object.assign({}, this.anchor);\r\n    }\r\n    if (options.position) {\r\n      newSprite.position = Object.assign({}, this.position);\r\n    }\r\n\r\n    return newSprite;\r\n  }\r\n}\r\n\r\nexport class Object_sprite_terrain extends Object_sprite {\r\n  /**\r\n   * Terrain tile like desert or mountain, non-movable and cacheable. Normally, but not necessarily, these are\r\n   * inherited, depending on the map type. For example you might want to add some click area for these\r\n   *\r\n   * @extends Object_sprite\r\n   * @param {x: Number, y: Number} coords format: {x: Number, y: Number}. Coordinates for the object relative to it's parent\r\n   * @param {object} data This units custom data\r\n   * @param {object} options other specific options for constructing this terrain\r\n   */\r\n  constructor(coords, data, options) {\r\n    super(coords, data, options);\r\n\r\n    this.name = \"DefaultTerrainObject\";\r\n    this.type = \"terrain\";\r\n    this.highlightable = false;\r\n    this.selectable = false;\r\n  }\r\n}\r\n\r\nexport class Object_sprite_unit extends Object_sprite {\r\n  /**\r\n   * Map unit like infantry or worker, usually something with actions or movable. Usually these are extended, depending on the map type. For example you might want to add some click area for these (e.g. hexagon)\r\n   *\r\n   * @extends Object_sprite\r\n   * @requires core.graphics\r\n   * @param {x: Number, y: Number} coords Coordinates for the object relative to it's parent\r\n   * @param {object} data This units data\r\n   * @param {object} options other specific options for constructing this unit, like options.throwShadow\r\n   */\r\n  constructor(coords, data, options) {\r\n    super(coords, data, options);\r\n\r\n    this.name = \"DefaultUnitObjects\";\r\n    this.type = \"unit\";\r\n    /**\r\n     * actions bound to this object. @todo THIS HAS NOT BEEN IMPLEMENTED YET!\r\n     *\r\n     * @attribute actions\r\n     * @type {Object}\r\n     */\r\n    this.actions = {\r\n      move: [],\r\n      attack: []\r\n    };\r\n  }\r\n  /**\r\n   * Execute action on units (move, attack etc.). @todo THIS HAS NOT BEEN IMPLEMENTED YET!\r\n   *\r\n   * @param {String} type\r\n   */\r\n  doAction(type) {\r\n    this.actions[type].forEach(action => {\r\n      action();\r\n    });\r\n  }\r\n  /**\r\n   * Add certain action type. @todo THIS HAS NOT BEEN IMPLEMENTED YET!\r\n   *\r\n   * @param {String} type\r\n   */\r\n  addActionType(type) {\r\n    this.actions[type] = this.actions[type] || [];\r\n  }\r\n  /**\r\n   * Attach callback for the certain action type. @todo THIS HAS NOT BEEN IMPLEMENTED YET!\r\n   *\r\n   * @param {String} type\r\n   * @param {Function} cb\r\n   */\r\n  addCallbackToAction(type, cb) {\r\n    this.actions[type].push(cb);\r\n  }\r\n  dropShadow(...args) {\r\n    return utils.effects.dropShadow(...args);\r\n  }\r\n}"
  },
  {
    "__docId__": 111,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Object_sprite",
    "memberof": "core/Objects.js",
    "longname": "core/Objects.js~Object_sprite",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/Objects.js",
    "importStyle": "{Object_sprite}",
    "description": "*********************\n********* API **********\n***********************",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "PIXI~PIXI.Sprite"
    ]
  },
  {
    "__docId__": 112,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#constructor",
    "access": null,
    "description": "The base class of all sprite objects",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "PIXI.Sprite"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PIXI.Point"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "the coordinate where the object is located at, relative to it's parent"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "objects data, that will be used in the game. It will not actually be mainly used in graphical but rather things  like unit-data and city-data presentations etc."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.currFrame",
        "description": "currFrame the current frames number. This is basically the initial image, we can change it later for animation or such"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#name",
    "access": null,
    "description": "Name of the object. Used mostly for debugging",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#type",
    "access": null,
    "description": "Type of the object. Can be used for filtering, ordering or finding correct objects.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "highlightable",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#highlightable",
    "access": null,
    "description": "Is the object highligtable.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectable",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#selectable",
    "access": null,
    "description": "Is the object selectable.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#data",
    "access": null,
    "description": "Objects custom data. Holds unit statistics and most data. Like unit movement speed etc.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentFrame",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#currentFrame",
    "access": null,
    "description": "Current frame (from spritesheet) we are showing.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "areaWidth",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#areaWidth",
    "access": null,
    "description": "Object area width in pixels.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "areaHeight",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#areaHeight",
    "access": null,
    "description": "Object area height in pixels.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "innerDraw",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#innerDraw",
    "access": null,
    "description": "Drawing the object",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "coordinate x"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "coordinate y"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "this object instance"
    },
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#x",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#y",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawNewFrame",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#drawNewFrame",
    "access": null,
    "description": "Draws new frame to animate or such",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "coordinate x"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "coordinate y"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "newFrame",
        "description": "New frame number to animate to"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "this object instance"
    },
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentFrame",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#currentFrame",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getGraphicalArea",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#getGraphicalArea",
    "access": null,
    "description": "Get the area that is reserved for the graphical presenation of this object as a rectangle.",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "toGlobal: Boolean. Should the method return global coordinates or local (movableLayer)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object}               { x: Number, y: Number, width: Number, height: Number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "localToLocal",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#localToLocal",
    "access": null,
    "description": "Coordinate conversion: localToLocal",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "X coordinate"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Y coordinate"
      },
      {
        "nullable": null,
        "types": [
          "PIXI.DisplayObject"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "The DisplayObject where we should target the coordinates for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PIXI.Point"
      ],
      "spread": false,
      "description": "Coordinates"
    },
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clone",
    "memberof": "core/Objects.js~Object_sprite",
    "longname": "core/Objects.js~Object_sprite#clone",
    "access": null,
    "description": "Clone object",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "PIXI renderer"
        ],
        "spread": false,
        "optional": false,
        "name": "renderer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "position: Boolean, anchor: Boolean"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "cloned Object"
      ],
      "spread": false,
      "description": "cloned object"
    },
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Object_sprite_terrain",
    "memberof": "core/Objects.js",
    "longname": "core/Objects.js~Object_sprite_terrain",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/Objects.js",
    "importStyle": "{Object_sprite_terrain}",
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "interface": false,
    "extends": [
      "Object_sprite"
    ]
  },
  {
    "__docId__": 130,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/Objects.js~Object_sprite_terrain",
    "longname": "core/Objects.js~Object_sprite_terrain#constructor",
    "access": null,
    "description": "Terrain tile like desert or mountain, non-movable and cacheable. Normally, but not necessarily, these are\ninherited, depending on the map type. For example you might want to add some click area for these",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Object_sprite"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "x: Number, y: Number"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "format: {x: Number, y: Number}. Coordinates for the object relative to it's parent"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "This units custom data"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "other specific options for constructing this terrain"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "core/Objects.js~Object_sprite_terrain",
    "longname": "core/Objects.js~Object_sprite_terrain#name",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "core/Objects.js~Object_sprite_terrain",
    "longname": "core/Objects.js~Object_sprite_terrain#type",
    "access": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "highlightable",
    "memberof": "core/Objects.js~Object_sprite_terrain",
    "longname": "core/Objects.js~Object_sprite_terrain#highlightable",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectable",
    "memberof": "core/Objects.js~Object_sprite_terrain",
    "longname": "core/Objects.js~Object_sprite_terrain#selectable",
    "access": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Object_sprite_unit",
    "memberof": "core/Objects.js",
    "longname": "core/Objects.js~Object_sprite_unit",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/Objects.js",
    "importStyle": "{Object_sprite_unit}",
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "interface": false,
    "extends": [
      "Object_sprite"
    ]
  },
  {
    "__docId__": 136,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/Objects.js~Object_sprite_unit",
    "longname": "core/Objects.js~Object_sprite_unit#constructor",
    "access": null,
    "description": "Map unit like infantry or worker, usually something with actions or movable. Usually these are extended, depending on the map type. For example you might want to add some click area for these (e.g. hexagon)",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Object_sprite"
      },
      {
        "tagName": "@requires",
        "tagValue": "core.graphics"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "x: Number, y: Number"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "Coordinates for the object relative to it's parent"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "This units data"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "other specific options for constructing this unit, like options.throwShadow"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 137,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "core/Objects.js~Object_sprite_unit",
    "longname": "core/Objects.js~Object_sprite_unit#name",
    "access": null,
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "core/Objects.js~Object_sprite_unit",
    "longname": "core/Objects.js~Object_sprite_unit#type",
    "access": null,
    "description": null,
    "lineNumber": 208,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "actions",
    "memberof": "core/Objects.js~Object_sprite_unit",
    "longname": "core/Objects.js~Object_sprite_unit#actions",
    "access": null,
    "description": "actions bound to this object. @todo THIS HAS NOT BEEN IMPLEMENTED YET!",
    "lineNumber": 215,
    "unknown": [
      {
        "tagName": "@attribute",
        "tagValue": "actions"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "doAction",
    "memberof": "core/Objects.js~Object_sprite_unit",
    "longname": "core/Objects.js~Object_sprite_unit#doAction",
    "access": null,
    "description": "Execute action on units (move, attack etc.). @todo THIS HAS NOT BEEN IMPLEMENTED YET!",
    "lineNumber": 225,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 141,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addActionType",
    "memberof": "core/Objects.js~Object_sprite_unit",
    "longname": "core/Objects.js~Object_sprite_unit#addActionType",
    "access": null,
    "description": "Add certain action type. @todo THIS HAS NOT BEEN IMPLEMENTED YET!",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 142,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addCallbackToAction",
    "memberof": "core/Objects.js~Object_sprite_unit",
    "longname": "core/Objects.js~Object_sprite_unit#addCallbackToAction",
    "access": null,
    "description": "Attach callback for the certain action type. @todo THIS HAS NOT BEEN IMPLEMENTED YET!",
    "lineNumber": 244,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropShadow",
    "memberof": "core/Objects.js~Object_sprite_unit",
    "longname": "core/Objects.js~Object_sprite_unit#dropShadow",
    "access": null,
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/UI.js",
    "memberof": null,
    "longname": "core/UI.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * Main class for showing UI on the map. Like unit selections and such. Has nothing to do with showing off-map data.\r\n * Good examples for what this shows are: selected units-list, selection highlight (like a circle on the selected unit) and\r\n * bringing the unit on top in the map.\r\n *\r\n * @param {Module} givenUITheme the module that will be used for the UI theme\r\n * @param {Map} givenMap Map instance that is used\r\n * @return UI module\r\n*/\r\n\r\n/**\r\n * The abstract UI module for the core map functionality. This is used by defining UI Themes that implement this\r\n * core UI module.\r\n * Default methods to use in UI are:\r\n * showSelections and highlightSelectedObject. More methods can be extended to UI with plugins\r\n *\r\n * @todo Not implemented fully yet and probably need refactoring\r\n * */\r\n\r\n/***********************\r\n****** VARIABLES *******\r\n***********************/\r\nvar scope;\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport { UI as UI };\r\n\r\n/***********************\r\n******** PUBLIC ********\r\n***********************/\r\nfunction UI (UITheme, givenMap) {\r\n  var map;\r\n\r\n  /* SINGLETON MODULE */\r\n  if (scope) {\r\n    return scope;\r\n  }\r\n\r\n  if (!UITheme || !givenMap) {\r\n    throw new Error(\"UI-module requires UITheme and map object\");\r\n  }\r\n\r\n  map = givenMap;\r\n  scope = {};\r\n\r\n  /**\r\n   * Responsible for showing selection element, where the player select the wanted object out of array of objects.\r\n   * For example if there are several objects in one tile on the map and the player needs to be able to select one\r\n   * specific unit on the stack. This is always defined in the UI theme-module\r\n   * */\r\n  scope.showSelections = UITheme.showSelections.bind(UITheme);\r\n  /**\r\n   * Resonsible for hignlighting the selected object. For example the unit that is being commanded. The hightlight\r\n   * can mean e.g. bringing the unit on top on the map and showing selection circle around it.\r\n   * */\r\n  scope.highlightSelectedObject = UITheme.highlightSelectedObject.bind(UITheme);\r\n  /**\r\n   * Shows arrow or movement or what ever to indicate the selected unit is moving to the given location\r\n   * */\r\n  scope.showUnitMovement = UITheme.showUnitMovement.bind(UITheme);\r\n\r\n  return scope;\r\n}"
  },
  {
    "__docId__": 145,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "UI",
    "memberof": "core/UI.js",
    "longname": "core/UI.js~UI",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/UI.js",
    "importStyle": "{UI}",
    "description": "********************\n******* PUBLIC ********\n*********************",
    "lineNumber": 35,
    "params": [
      {
        "name": "UITheme",
        "types": [
          "*"
        ]
      },
      {
        "name": "givenMap",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 146,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/UI_themeBase.js",
    "memberof": null,
    "longname": "core/UI_themeBase.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/***********************\r\n******** IMPORT ********\r\n***********************/\r\nimport { createCSSRules } from '/components/map/UIs/default/layout/CSSRules';\r\n\r\n/***********************\r\n****** VARIABLES *******\r\n***********************/\r\nvar styleSheetElement, allCSSClasses;\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport class UI_templateBase {\r\n  /**\r\n   * The template base class for UI templates\r\n   *\r\n   * @param  {[type]} CSSClasses [description]\r\n   * @return {[type]}            [description]\r\n   */\r\n  constructor(CSSClasses) {\r\n    allCSSClasses = CSSClasses;\r\n    styleSheetElement = this.addStyleElement();\r\n    let createdCSS = createCSSRules(allCSSClasses);\r\n    this.addCSSRulesToScriptTag(styleSheetElement, createdCSS);\r\n  }\r\n  /**\r\n   * Get the stylesheet element. Where are the defined CSS is\r\n   *\r\n   * @return {HTML Element}\r\n   */\r\n  getStyleSheetElement() {\r\n    return styleSheetElement;\r\n  }\r\n  getCSSClasses() {\r\n    return allCSSClasses;\r\n  }\r\n  addCSSRulesToScriptTag(sheet, rules) {\r\n    sheet.insertRule(rules, 0);\r\n  }\r\n  addStyleElement() {\r\n    var _styleElement = document.createElement(\"style\");\r\n    // WebKit hack :(\r\n    _styleElement.appendChild(document.createTextNode(\"\"));\r\n    document.head.appendChild(_styleElement);\r\n\r\n    return _styleElement.sheet;\r\n  }\r\n  showModal(modalElem, cssClasses) {\r\n    /** @todo make sure / check, that this gets added only once */\r\n    modalElem.classList.add(cssClasses.select);\r\n    /* Would be HTML 5.1 standard, but that might be a long way\r\n      this.modal.show();*/\r\n  }\r\n}"
  },
  {
    "__docId__": 147,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "UI_templateBase",
    "memberof": "core/UI_themeBase.js",
    "longname": "core/UI_themeBase.js~UI_templateBase",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/UI_themeBase.js",
    "importStyle": "{UI_templateBase}",
    "description": "********************\n******** API **********\n*********************",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 148,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/UI_themeBase.js~UI_templateBase",
    "longname": "core/UI_themeBase.js~UI_templateBase#constructor",
    "access": null,
    "description": "The template base class for UI templates",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "CSSClasses",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getStyleSheetElement",
    "memberof": "core/UI_themeBase.js~UI_templateBase",
    "longname": "core/UI_themeBase.js~UI_templateBase#getStyleSheetElement",
    "access": null,
    "description": "Get the stylesheet element. Where are the defined CSS is",
    "lineNumber": 34,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "HTML Element"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 150,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCSSClasses",
    "memberof": "core/UI_themeBase.js~UI_templateBase",
    "longname": "core/UI_themeBase.js~UI_templateBase#getCSSClasses",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 151,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addCSSRulesToScriptTag",
    "memberof": "core/UI_themeBase.js~UI_templateBase",
    "longname": "core/UI_themeBase.js~UI_templateBase#addCSSRulesToScriptTag",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "sheet",
        "types": [
          "*"
        ]
      },
      {
        "name": "rules",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 152,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addStyleElement",
    "memberof": "core/UI_themeBase.js~UI_templateBase",
    "longname": "core/UI_themeBase.js~UI_templateBase#addStyleElement",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showModal",
    "memberof": "core/UI_themeBase.js~UI_templateBase",
    "longname": "core/UI_themeBase.js~UI_templateBase#showModal",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "modalElem",
        "types": [
          "*"
        ]
      },
      {
        "name": "cssClasses",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 154,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/utils/dataManipulation.js",
    "memberof": null,
    "longname": "core/utils/dataManipulation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * These are utils for manipulating the data, that our classes and functions use.\r\n */\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport const dataManipulation = setupDataManipulation();\r\n\r\n/***********************\r\n******** PUBLIC ********\r\n***********************/\r\nfunction setupDataManipulation() {\r\n  /***********************\r\n  ********* API **********\r\n  ***********************/\r\n  return {\r\n    mapObjectsToArray,\r\n    flattenArrayBy1Level\r\n  };\r\n\r\n  /***********************\r\n  ******** PUBLIC ********\r\n  ***********************/\r\n  /**\r\n   * Changes the data from e.g. getting objects from the map based on coordinate. The data is like this normally:\r\n   * {\r\n   *   units: [{\r\n   *     {... the objects datas ...}\r\n   *   }]\r\n   * }\r\n   * We change it to this:\r\n   * [\r\n   *   [{\r\n   *     {... the objects datas ...}\r\n   *   }]\r\n   * ]\r\n   *\r\n   * @param  {Object} objects       Object that holds objects\r\n   * @return {Array}                Returns the transformed array\r\n   */\r\n  function mapObjectsToArray(objects) {\r\n    return Object.keys(objects).map(objGroup => {\r\n      return objects[objGroup];\r\n    });\r\n  }\r\n  function flattenArrayBy1Level(objects) {\r\n    let merged = [];\r\n\r\n    return merged.concat.apply(merged, objects);\r\n  }\r\n}"
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "dataManipulation",
    "memberof": "core/utils/dataManipulation.js",
    "longname": "core/utils/dataManipulation.js~dataManipulation",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/utils/dataManipulation.js",
    "importStyle": "{dataManipulation}",
    "description": "********************\n******** API **********\n*********************",
    "lineNumber": 10,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupDataManipulation",
    "memberof": "core/utils/dataManipulation.js",
    "longname": "core/utils/dataManipulation.js~setupDataManipulation",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/utils/dataManipulation.js",
    "importStyle": null,
    "description": "********************\n******* PUBLIC ********\n*********************",
    "lineNumber": 15,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 157,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/utils/effects.js",
    "memberof": null,
    "longname": "core/utils/effects.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/*\r\n * This module will hold the most common graphical effects used in the map. It is still very stub as the development\r\n * hasn't proceeded to this stage yet.\r\n */\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport const effects = setupEffects();\r\n\r\n/***********************\r\n******** PUBLIC ********\r\n***********************/\r\nfunction setupEffects() {\r\n  /***********************\r\n  ********* API **********\r\n  ***********************/\r\n  return {\r\n    dropShadow\r\n  };\r\n\r\n  /***********************\r\n  ******** PUBLIC ********\r\n  ***********************/\r\n  /**\r\n   * @method  dropShadow\r\n   * @param  {Object} options [description]\r\n   * @return {[type]}         [description]\r\n   */\r\n  function dropShadow(options = { color: \"#000000\", distance: 5, alpha: 0.5, amgöe: 45, blur: 5 } ) {\r\n      var shadow  = new PIXI.filters.DropShadowFilter();\r\n\r\n      shadow.color  = options.color;\r\n      shadow.distance = options.distance;\r\n      shadow.alpha  = options.alpha;\r\n      shadow.angle  = options.angle;\r\n      shadow.blur   = options.blur;\r\n\r\n      this.filters = [shadow];\r\n    }\r\n}"
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "effects",
    "memberof": "core/utils/effects.js",
    "longname": "core/utils/effects.js~effects",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/utils/effects.js",
    "importStyle": "{effects}",
    "description": "********************\n******** API **********\n*********************",
    "lineNumber": 11,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupEffects",
    "memberof": "core/utils/effects.js",
    "longname": "core/utils/effects.js~setupEffects",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/utils/effects.js",
    "importStyle": null,
    "description": "********************\n******* PUBLIC ********\n*********************",
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/utils/index.js",
    "memberof": null,
    "longname": "core/utils/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/* Bundle utils in utils-parent and export them */\r\nimport { dataManipulation } from './dataManipulation';\r\nimport { Quadtree } from './Quadtree';\r\nimport { effects } from './effects';\r\nimport { mouse, resize, environmentDetection, general } from './utils';\r\n\r\nexport const utils = {\r\n  dataManipulation,\r\n  Quadtree,\r\n  effects,\r\n  mouse, resize, environmentDetection, general\r\n};"
  },
  {
    "__docId__": 161,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "utils",
    "memberof": "core/utils/index.js",
    "longname": "core/utils/index.js~utils",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/utils/index.js",
    "importStyle": "{utils}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/utils/Quadtree.js",
    "memberof": null,
    "longname": "core/utils/Quadtree.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * This class handles the API for quadtree to search for the wanted objects on the certain coordinates. After this\r\n * the map should do it's own - more precise - hit detections.\r\n *\r\n * @require Quadtree-js. Though this base library can be changed easily\r\n */\r\n\r\n/***********************\r\n******** IMPORT ********\r\n***********************/\r\nimport { Quadtree as QuadMod } from \"/assets/lib/quadtree-js/quadtree-js-hitman\";\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport class Quadtree {\r\n  /**\r\n   * @param {Object} options    options for the QuadModule\r\n   * @param {Object} max        How many levels deep\r\n   * @return                    Quadtree instance\r\n   */\r\n  constructor(options, max) {\r\n    var { objects: max_objects, levels: max_levels } = max;\r\n\r\n    this.quadtree = new QuadMod(options, max_objects, max_levels);\r\n  }\r\n  /**\r\n   * Add an object to the quadtree.\r\n   *\r\n   * @param {x: Number, y: Number} coords         Coordinates on the global / canvas element.\r\n   * @param {width:Number, height:Number} size    You can use bounds for the object \"hit\" detection\r\n   * @param {Object} data                         Objects extra custom data. This is optional.\r\n   * @return                                      Quadtree instance\r\n   */\r\n  add(coords, size, data) {\r\n    var objToAdd = _creteQuadtreeObject(coords, size, data);\r\n\r\n    this.quadtree.insert(objToAdd);\r\n  }\r\n  /**\r\n   * Remove an object from the quadtree.\r\n   *\r\n   * @param {x: Number, y: Number} coords         Coordinates on the global / canvas element.\r\n   * @param {width:Number, height:Number} size    You can use bounds for the object \"hit\" detection\r\n   * @param {Object} data                         Objects extra custom data. This is optional.\r\n   * @param {Boolean} refresh                     Should we refresh the quadtree setting, after removal. Can take some\r\n   * resources to execute. So we want this to be optional.\r\n   * @return                                      Quadtree instance\r\n   */\r\n  remove(coords, size, data, refresh) {\r\n    var objToRemove = _creteQuadtreeObject(coords, size, data);\r\n\r\n    this.quadtree.removeObject(objToRemove);\r\n    refresh && this.quadtree.cleanup();\r\n  }\r\n  retrieve(coords, size = { width: 0, height: 0 } ) {\r\n    const hitDimensions = {\r\n      x: coords.x,\r\n      y: coords.y,\r\n      width: size.width,\r\n      height: size.height\r\n    };\r\n    var objects = [];\r\n\r\n    objects = this.quadtree.retrieve(hitDimensions).map((object) => {\r\n      return object.data;\r\n    });\r\n\r\n    return objects;\r\n  }\r\n  /**\r\n   * Move an object on the quadtree\r\n   *\r\n   * @param {x: Number, y: Number} coords         Coordinates on the global / canvas element.\r\n   * @param {width:Number, height:Number} size    You can use bounds for the object \"hit\" detection\r\n   * @param {Object} data                         Objects extra custom data. This is optional.\r\n   * @param {Boolean} to                          Should we refresh the quadtree setting, after removal. Can take some\r\n   * resources to execute. So we want this to be optional.\r\n   * @return {Boolean}                            True of false\r\n   */\r\n  move(coords, size, data, to) {\r\n    var foundObject = this.findObject(coords, size, data);\r\n\r\n    if (foundObject) {\r\n      this.quadtree.removeObject(foundObject);\r\n      foundObject.x = to.x;\r\n      foundObject.y = to.y;\r\n      this.quadtree.insert(foundObject);\r\n      this.refreshAll();\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * refresh the whole quadtree setting. Can spend some resources.\r\n   */\r\n  refreshAll() {\r\n    this.quadtree.cleanup();\r\n  }\r\n  /**\r\n   * Find an object by hitDetection from the quadtree setting.\r\n   *\r\n   * @param {x: Number, y: Number} coords         Coordinates on the global / canvas element.\r\n   * @param {width:Number, height:Number} size    You can use bounds for the object \"hit\" detection\r\n   * @param {Object} data                         Objects extra custom data. This is optional.\r\n   * @return {Object}                             Found object\r\n   */\r\n  findObject(coords, size, data) {\r\n    var foundObject = this.retrieve(coords, size).filter(function(object) {\r\n      return object.data === data ? true : false;\r\n    });\r\n\r\n    return foundObject;\r\n  }\r\n}\r\n\r\n/***********************\r\n******* PRIVATE ********\r\n***********************/\r\n/**\r\n * [_creteQuadtreeObject description]\r\n *\r\n * @param  {x:Number, y:Number} coords          global coordinates on canvas\r\n * @param  {width:Number, height:Number} size   You can use bounds for the object\r\n * if you wish, instead of point / coordinates\r\n * @param  {Object} data                        Extra data stored for the quadtree object\r\n * @return {Object}                             Added quadtree object\r\n */\r\nfunction _creteQuadtreeObject(coords, size = {width:0, height:0}, data = undefined) {\r\n  var objToAdd = coords;\r\n\r\n  if (coords.x === undefined && coords.y === undefined) {\r\n    throw new Error(\"_createQuadtreeObject requires x and y coordinates as parameters\");\r\n  }\r\n  objToAdd.width = size.width;\r\n  objToAdd.height = size.height;\r\n  objToAdd.data = data;\r\n\r\n  return objToAdd;\r\n}"
  },
  {
    "__docId__": 163,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Quadtree",
    "memberof": "core/utils/Quadtree.js",
    "longname": "core/utils/Quadtree.js~Quadtree",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/utils/Quadtree.js",
    "importStyle": "{Quadtree}",
    "description": "********************\n******** API **********\n*********************",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 164,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "core/utils/Quadtree.js~Quadtree",
    "longname": "core/utils/Quadtree.js~Quadtree#constructor",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "options for the QuadModule"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": "How many levels deep"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Quadtree instance"
    },
    "generator": false
  },
  {
    "__docId__": 165,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "quadtree",
    "memberof": "core/utils/Quadtree.js~Quadtree",
    "longname": "core/utils/Quadtree.js~Quadtree#quadtree",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "core/utils/Quadtree.js~Quadtree",
    "longname": "core/utils/Quadtree.js~Quadtree#add",
    "access": null,
    "description": "Add an object to the quadtree.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "x: Number, y: Number"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "Coordinates on the global / canvas element."
      },
      {
        "nullable": null,
        "types": [
          "width:Number, height:Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "You can use bounds for the object \"hit\" detection"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Objects extra custom data. This is optional."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Quadtree instance"
    },
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "core/utils/Quadtree.js~Quadtree",
    "longname": "core/utils/Quadtree.js~Quadtree#remove",
    "access": null,
    "description": "Remove an object from the quadtree.",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "x: Number, y: Number"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "Coordinates on the global / canvas element."
      },
      {
        "nullable": null,
        "types": [
          "width:Number, height:Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "You can use bounds for the object \"hit\" detection"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Objects extra custom data. This is optional."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "refresh",
        "description": "Should we refresh the quadtree setting, after removal. Can take some\nresources to execute. So we want this to be optional."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Quadtree instance"
    },
    "generator": false
  },
  {
    "__docId__": 168,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "retrieve",
    "memberof": "core/utils/Quadtree.js~Quadtree",
    "longname": "core/utils/Quadtree.js~Quadtree#retrieve",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "coords",
        "types": [
          "*"
        ]
      },
      {
        "name": "size",
        "optional": true,
        "types": [
          "{\"width\": number, \"height\": number}"
        ],
        "defaultRaw": {
          "width": 0,
          "height": 0
        },
        "defaultValue": "{\"width\":0,\"height\":0}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 169,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "move",
    "memberof": "core/utils/Quadtree.js~Quadtree",
    "longname": "core/utils/Quadtree.js~Quadtree#move",
    "access": null,
    "description": "Move an object on the quadtree",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "x: Number, y: Number"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "Coordinates on the global / canvas element."
      },
      {
        "nullable": null,
        "types": [
          "width:Number, height:Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "You can use bounds for the object \"hit\" detection"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Objects extra custom data. This is optional."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": "Should we refresh the quadtree setting, after removal. Can take some\nresources to execute. So we want this to be optional."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "True of false"
    },
    "generator": false
  },
  {
    "__docId__": 170,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "refreshAll",
    "memberof": "core/utils/Quadtree.js~Quadtree",
    "longname": "core/utils/Quadtree.js~Quadtree#refreshAll",
    "access": null,
    "description": "refresh the whole quadtree setting. Can spend some resources.",
    "lineNumber": 101,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 171,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "findObject",
    "memberof": "core/utils/Quadtree.js~Quadtree",
    "longname": "core/utils/Quadtree.js~Quadtree#findObject",
    "access": null,
    "description": "Find an object by hitDetection from the quadtree setting.",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "x: Number, y: Number"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "Coordinates on the global / canvas element."
      },
      {
        "nullable": null,
        "types": [
          "width:Number, height:Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "You can use bounds for the object \"hit\" detection"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Objects extra custom data. This is optional."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Found object"
    },
    "generator": false
  },
  {
    "__docId__": 172,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_creteQuadtreeObject",
    "memberof": "core/utils/Quadtree.js",
    "longname": "core/utils/Quadtree.js~_creteQuadtreeObject",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/utils/Quadtree.js",
    "importStyle": null,
    "description": "[_creteQuadtreeObject description]",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "x:Number, y:Number"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "global coordinates on canvas"
      },
      {
        "nullable": null,
        "types": [
          "width:Number, height:Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "You can use bounds for the object\nif you wish, instead of point / coordinates"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Extra data stored for the quadtree object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Added quadtree object"
    },
    "generator": false
  },
  {
    "__docId__": 173,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/utils/utils.js",
    "memberof": null,
    "longname": "core/utils/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport const mouse = setupMouseUtils();\r\nexport const resize = setupResizeUtils();\r\nexport const environmentDetection = setupEnvironmentDetection();\r\nexport const general = setupGeneral();\r\n/**\r\n * The core utils for the 2D map engine.\r\n */\r\n\r\nfunction setupMouseUtils() {\r\n  return {\r\n    isRightClick,\r\n    eventData: {\r\n      getPointerCoords,\r\n      getHAMMERPointerCoords\r\n    },\r\n    eventMouseCoords\r\n  };\r\n\r\n  /**\r\n   * Detects if the mouse click has been the right mouse button\r\n   *\r\n   * @param {Event} event The event where the click occured\r\n   */\r\n  function isRightClick( event ) {\r\n    var rightclick;\r\n\r\n    event = event ? event : window.event; /* For IE. */\r\n    if ( event.buttons ) {\r\n      rightclick = ( +event.buttons === 2 );\r\n    } else if ( event.which ) {\r\n      rightclick = ( +event.which === 3 );\r\n    } else if ( event.button ) {\r\n      rightclick = ( +event.button === 2 );\r\n    }\r\n\r\n    if ( rightclick ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  function getPointerCoords(e) {\r\n    return {\r\n      x: e.offsetX,\r\n      y: e.offsetY\r\n    };\r\n  }\r\n  function getHAMMERPointerCoords(e) {\r\n    return e.center;\r\n  }\r\n  function eventMouseCoords(e) {\r\n    var pos = {\r\n      x:0,\r\n      y:0\r\n    };\r\n\r\n    if (!e) {\r\n      e = window.event;\r\n    }\r\n    if (e.pageX || e.pageY)   {\r\n      pos.x = e.pageX;\r\n      pos.y = e.pageY;\r\n    } else if (e.clientX || e.clientY)  {\r\n      pos.x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n      pos.y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n    }\r\n    // posx and posy contain the mouse position relative to the document\r\n    // Do something with this information\r\n    return pos;\r\n  }\r\n}\r\nfunction setupResizeUtils() {\r\n  return {\r\n    toggleFullScreen,\r\n    setToFullSize,\r\n    getWindowSize\r\n  };\r\n\r\n  function toggleFullScreen() {\r\n    var elem = document.body; // Make the body go full screen.\r\n    var isInFullScreen = ( document.fullScreenElement && document.fullScreenElement !== null ) ||\r\n       (\r\n       document.mozFullScreen || document.webkitIsFullScreen );\r\n\r\n    /* jshint expr: true */\r\n    isInFullScreen ? cancelFullScreen( document ) : requestFullScreen( elem );\r\n\r\n    return false;\r\n\r\n    /*********** PRIVATE ************/\r\n    /* global ActiveXObject */\r\n    function cancelFullScreen( el ) {\r\n      var requestMethod = el.cancelFullScreen ||\r\n         el.webkitCancelFullScreen ||\r\n         el.mozCancelFullScreen ||\r\n         el.exitFullscreen;\r\n      if ( requestMethod ) { // cancel full screen.\r\n        requestMethod.call( el );\r\n      } else if ( typeof window.ActiveXObject !== \"undefined\" ) { // Older IE.\r\n        var wscript = new ActiveXObject( \"WScript.Shell\" );\r\n        wscript !== null && wscript.SendKeys( \"{F11}\" );\r\n      }\r\n    }\r\n    function requestFullScreen( el ) {\r\n      // Supports most browsers and their versions.\r\n      var requestMethod = el.requestFullScreen ||\r\n         el.webkitRequestFullScreen ||\r\n         el.mozRequestFullScreen ||\r\n         el.msRequestFullScreen;\r\n\r\n      if ( requestMethod ) { // Native full screen.\r\n        requestMethod.call( el );\r\n      } else if ( typeof window.ActiveXObject !== \"undefined\" ) { // Older IE.\r\n        var wscript = new ActiveXObject( \"WScript.Shell\" );\r\n        wscript !== null && wscript.SendKeys( \"{F11}\" );\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n  /**\r\n   * Sets canvas size to maximum width and height on the browser, not using fullscreen\r\n   * @param {DOMElement Canvas context} context\r\n   */\r\n  function setToFullSize(context) {\r\n    return function fullSize() {\r\n      const size = getWindowSize();\r\n\r\n      context.canvas.width = size.x;\r\n      context.canvas.height = size.y;\r\n    };\r\n  }\r\n  function getWindowSize() {\r\n    return {\r\n      x: window.innerWidth,\r\n      y: window.innerHeight\r\n    };\r\n  }\r\n}\r\nfunction setupEnvironmentDetection() {\r\n  return {\r\n    getPixelRatio//,\r\n    // isMobile,\r\n    // isMobile_detectUserAgent\r\n  };\r\n\r\n  /**\r\n   * [getPixelRatio description]\r\n   *\r\n   * @require Canvas element in the DOM. This needs to be found\r\n   * @param  {[type]} canvasElement [description]\r\n   * @return {[type]}               [description]\r\n   */\r\n  function getPixelRatio(canvasElement) {\r\n    const DPR = window.devicePixelRatio || 1;\r\n    var ctx = ( canvasElement && canvasElement.getContext(\"2d\") ) || document.createElement('canvas').getContext(\"2d\");\r\n    var bsr = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio ||\r\n              ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio ||\r\n              ctx.backingStorePixelRatio || 1;\r\n\r\n    return DPR / bsr;\r\n  }\r\n}\r\n\r\nfunction setupGeneral() {\r\n  const PIXEL_EPSILON = 0.01;\r\n\r\n  /**************************\r\n  *********** API ***********\r\n  **************************/\r\n  return {\r\n    pixelEpsilonEquality: epsilonEquality\r\n  };\r\n\r\n  /**************************\r\n  ********* PUBLIC **********\r\n  **************************/\r\n  function epsilonEquality(x, y) {\r\n    return ( Math.abs(x) - Math.abs(y) ) < PIXEL_EPSILON;\r\n  }\r\n}"
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "mouse",
    "memberof": "core/utils/utils.js",
    "longname": "core/utils/utils.js~mouse",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/utils/utils.js",
    "importStyle": "{mouse}",
    "description": "********************\n******** API **********\n*********************",
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "resize",
    "memberof": "core/utils/utils.js",
    "longname": "core/utils/utils.js~resize",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/utils/utils.js",
    "importStyle": "{resize}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "environmentDetection",
    "memberof": "core/utils/utils.js",
    "longname": "core/utils/utils.js~environmentDetection",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/utils/utils.js",
    "importStyle": "{environmentDetection}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "general",
    "memberof": "core/utils/utils.js",
    "longname": "core/utils/utils.js~general",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/utils/utils.js",
    "importStyle": "{general}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupMouseUtils",
    "memberof": "core/utils/utils.js",
    "longname": "core/utils/utils.js~setupMouseUtils",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/utils/utils.js",
    "importStyle": null,
    "description": "The core utils for the 2D map engine.",
    "lineNumber": 14,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 179,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupResizeUtils",
    "memberof": "core/utils/utils.js",
    "longname": "core/utils/utils.js~setupResizeUtils",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/utils/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 180,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupEnvironmentDetection",
    "memberof": "core/utils/utils.js",
    "longname": "core/utils/utils.js~setupEnvironmentDetection",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/utils/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 181,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupGeneral",
    "memberof": "core/utils/utils.js",
    "longname": "core/utils/utils.js~setupGeneral",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/utils/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 169,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 182,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "core/zoom/map_zoom.js",
    "memberof": null,
    "longname": "core/zoom/map_zoom.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\r\n\r\n/**\r\n * The core plugin for the 2D map engine. Handles zooming for the map. Core plugins can always be overwrote if needed.\r\n * Zooming happens when the user scrolls the mousewheel or in mobile, pinches the screen\r\n */\r\n\r\n/** ===== OWN imports ===== */\r\nimport { eventListeners as eventListenerMod, utils, mapEvents } from '/components/bundles/coreBundle';\r\n\r\n/***********************\r\n********* API **********\r\n***********************/\r\nexport const pluginName = \"map_zoom\";\r\nexport var map_zoom = setupMap_zoom();\r\n\r\n/***********************\r\n******** PUBLIC ********\r\n***********************/\r\nfunction setupMap_zoom() {\r\n  /***********************\r\n  ****** VARIABLES *******\r\n  ***********************/\r\n  const TIMEOUT_AFTER_ZOOM = 40;\r\n  var initialized = false;\r\n  var mobileInitialized = false;\r\n  var difference = {};\r\n  var map, eventListener;\r\n  /**\r\n   * Maximum and minimum amount, the player can zoom the map\r\n   * @type { farther: Number, closer: Number }\r\n   */\r\n  var zoomLimit = {\r\n    farther: 0.4,\r\n    closer : 2.5\r\n  };\r\n  /**\r\n   * How much one step of zooming affects\r\n   * @type {Number}\r\n   */\r\n  var zoomModifier = 0.1;\r\n\r\n  /************************\r\n  ********** API **********\r\n  ************************/\r\n  return {\r\n    init\r\n  };\r\n\r\n  /************************\r\n  ********* PUBLIC ********\r\n  ************************/\r\n  /**\r\n   * Required init functions for the plugin\r\n   * @param {Map object} mapObj - the Map class object\r\n   *\r\n   * @todo think through should setZoomLimits and setZoomModifier be in map.prototype?\r\n   * But zoomLimit and modifier need to be setable in creation, init or later with setters\r\n   * */\r\n  function init(thisMap) {\r\n    eventListener = eventListenerMod();\r\n    map = thisMap;\r\n    map.setPrototype(\"zoomIn\", zoomIn);\r\n    map.setPrototype(\"zoomOut\", zoomOut);\r\n    map.setPrototype(\"setZoomLimits\", setZoomLimits);\r\n    map.setPrototype(\"setZoomModifier\", setZoomModifier);\r\n\r\n    /* Singleton should have been instantiated before, we only retrieve it with 0 params */\r\n    eventListener.toggleZoomListener(unifiedEventCB);\r\n  }\r\n\r\n  /****************************************\r\n  ***** PROTOTYPE extensions for map ******\r\n  ****************************************/\r\n  /**\r\n   * How much one mouse wheel step zooms\r\n   * @param {Number} amount How much one mouse wheel step zooms. Needs to be in between 0 - 0.5\r\n   * */\r\n  function setZoomModifier (amount) {\r\n    if (! (amount > 0 || amount <= 0.5) ) {\r\n      throw new Error(\"Wrong zoom modifier! (needs to be >0 and <=0.5, given:\" + amount);\r\n    }\r\n    zoomModifier = amount;\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * How much can be zoomed in maximum and minimum\r\n   * @param {Number 1+} farther How much one mouse wheel step zooms out\r\n   * @param {Number 0 - 1} closer How much one mouse wheel step zooms in\r\n   * */\r\n  function setZoomLimits (farther, closer) {\r\n    zoomLimit.farther = farther;\r\n    zoomLimit.closer = closer;\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Zoom in to the map\r\n   * @param {Number} amount how much map is zoomed in\r\n   * */\r\n  function zoomIn (amount) {\r\n    var presentScale = this.getScale();\r\n    const IS_ZOOM_IN = true;\r\n\r\n    mapEvents.publish(\"mapZoomed\", { presentScale: presentScale, amount: amount, isZoomIn: IS_ZOOM_IN } );\r\n\r\n    return _zoom(this, presentScale, Math.abs(amount) || zoomModifier, IS_ZOOM_IN);\r\n  }\r\n  /**\r\n   * Zoom out of the map\r\n   * @param {Number} amount how much map is zoomed out\r\n   * */\r\n  function zoomOut (amount) {\r\n    var presentScale = this.getScale();\r\n    const IS_ZOOM_IN = false;\r\n\r\n    amount = amount < 0 ? amount : -amount;\r\n    mapEvents.publish(\"mapZoomed\", { presentScale: presentScale, amount: amount, isZoomIn: IS_ZOOM_IN } );\r\n\r\n    return _zoom(this, presentScale, amount || -zoomModifier, IS_ZOOM_IN);\r\n  }\r\n\r\n  /**********************************\r\n  ********* Event functions *********\r\n  **********************************/\r\n  /**\r\n   * This starts the correct eventListener for the current environment. Mousewheel and pinch differ quite dramatically\r\n   * so we keep them as separate functions.\r\n   *\r\n   * @param  {Event} e             Event object\r\n   * @param  {Integer} delta       Hamster.js provided delta\r\n   * @param  {Integer} deltaX      Hamster.js provided delta\r\n   * @param  {Integer} deltaY      Hamster.js provided delta\r\n   */\r\n  function unifiedEventCB(e, delta, deltaX, deltaY) {\r\n    if (delta) {\r\n      handleZoomEventDesktop(e, delta, deltaX, deltaY);\r\n    } else if (e.pointers) {\r\n      if (!mobileInitialized) {\r\n        mobileInitialized = true;\r\n        setZoomModifier(zoomModifier * 0.5);\r\n      }\r\n      handleZoomEventMobile(e);\r\n    }\r\n  }\r\n  /**\r\n   * Setup desktop zoomEvent by currying. Internally: Sets up correct scale + moves map accordingly to zoom to the\r\n   * current center coordinates\r\n   *\r\n   * @param  {Map} map             Map instance\r\n   */\r\n  function handleZoomEventDesktop(e, delta, deltaX, deltaY) {\r\n    var mouseWheelDelta = deltaY;\r\n    /* Scale changes when the map is drawn. We make calculations with the old scale before draw */\r\n    var oldScale = map.getScale();\r\n\r\n    /* No nasty scrolling side-effects */\r\n    e.preventDefault();\r\n\r\n    if (mouseWheelDelta > 0) {\r\n      if (map.zoomIn()) {\r\n        map.moveMap(_calculateCenterMoveCoordinates(oldScale, true), _calculateCenterMoveCoordinates(map.getScale(), true));\r\n      }\r\n    } else if (mouseWheelDelta < 0) {\r\n      if (map.zoomOut()) {\r\n        map.moveMap(_calculateCenterMoveCoordinates(oldScale), _calculateCenterMoveCoordinates(map.getScale()));\r\n      }\r\n    }\r\n  }\r\n  function handleZoomEventMobile(e) {\r\n    var pointers = e.pointers;\r\n    var coords = [{\r\n        x: pointers[0].pageX,\r\n        y: pointers[0].pageY\r\n      },{\r\n        x: pointers[1].pageX,\r\n        y: pointers[1].pageY\r\n      }];\r\n    var changeX = Math.abs( coords[0].x - coords[1].x );\r\n    var changeY = Math.abs( coords[0].y - coords[1].y );\r\n\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (!initialized) {\r\n        difference = {\r\n          x: changeX,\r\n          y: changeY\r\n        };\r\n        eventListener.setState(\"zoom\", true);\r\n        initialized = true;\r\n\r\n        return;\r\n      } else if (e.eventType === 4 || e.eventType === 8) { /* e.eventType 4 = event canceled, e.eventType 8 = event finished */\r\n        /* We don't want another event to be fired right after a pinch event. It makes the zoomign experience rather\r\n         * bad if after zoom there is immediately an unexplainable drag and the map moves a bit\r\n         * */\r\n        window.setTimeout(function () {\r\n          eventListener.setState(\"zoom\", false);\r\n        }, TIMEOUT_AFTER_ZOOM);\r\n        initialized = false;\r\n      }\r\n\r\n      if (difference.x + difference.y < changeX + changeY) {\r\n        if (map.zoomIn()) {\r\n          map.moveMap(_calculateCenterMoveCoordinates(map.getScale(), true));\r\n        }\r\n      } else {\r\n        if (map.zoomOut()) {\r\n          map.moveMap(_calculateCenterMoveCoordinates(map.getScale()));\r\n        }\r\n      }\r\n\r\n      difference = {\r\n        x: changeX,\r\n        y: changeY\r\n      };\r\n\r\n    } catch (ev) {\r\n      console.log(\"Error! \", ev);\r\n    }\r\n  }\r\n\r\n  /* =================\r\n     Private functions\r\n     ================= */\r\n  function _isOverZoomLimit(amount, isZoomIn) {\r\n    if ( (isZoomIn && amount > zoomLimit.closer ) || (!isZoomIn && amount < zoomLimit.farther) ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  function _calculateCenterMoveCoordinates(scale, isZoomIn) {\r\n    var windowSize = utils.resize.getWindowSize();\r\n    var halfWindowSize = {\r\n      x: ( windowSize.x / 2 ) / scale,\r\n      y: ( windowSize.y / 2 ) / scale\r\n    };\r\n    var realMovement = {\r\n      x: ( halfWindowSize.x ) * ( ( isZoomIn ? -zoomModifier : zoomModifier) ),\r\n      y: ( halfWindowSize.y ) * ( ( isZoomIn ? -zoomModifier : zoomModifier) )\r\n    };\r\n\r\n    return realMovement;\r\n  }\r\n  function _zoom(map, presentScale, amount, isZoomIn) {\r\n    var newScale;\r\n\r\n    if ( !_isOverZoomLimit(presentScale, isZoomIn) ) {\r\n      newScale = map.setScale( amount ? presentScale + amount : presentScale + zoomModifier );\r\n    }\r\n\r\n    return newScale;\r\n  }\r\n}"
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pluginName",
    "memberof": "core/zoom/map_zoom.js",
    "longname": "core/zoom/map_zoom.js~pluginName",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/zoom/map_zoom.js",
    "importStyle": "{pluginName}",
    "description": "********************\n******** API **********\n*********************",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "map_zoom",
    "memberof": "core/zoom/map_zoom.js",
    "longname": "core/zoom/map_zoom.js~map_zoom",
    "access": null,
    "export": true,
    "importPath": "war_map_engine/core/zoom/map_zoom.js",
    "importStyle": "{map_zoom}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "setupMap_zoom",
    "memberof": "core/zoom/map_zoom.js",
    "longname": "core/zoom/map_zoom.js~setupMap_zoom",
    "access": null,
    "export": false,
    "importPath": "war_map_engine/core/zoom/map_zoom.js",
    "importStyle": null,
    "description": "********************\n******* PUBLIC ********\n*********************",
    "lineNumber": 20,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 187,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 202,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 208,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 211,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 212,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 213,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 214,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 215,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 216,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 217,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 218,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 219,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 220,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 221,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 222,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 223,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 224,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 225,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 226,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 227,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 228,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 229,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 230,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 231,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 232,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 233,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 235,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 236,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 237,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 238,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 239,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 240,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 241,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 242,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": null,
    "builtinExternal": true
  }
]